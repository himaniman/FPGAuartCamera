// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 15.1.0 Build 185 10/21/2015 SJ Standard Edition"

// DATE "09/03/2016 16:20:57"

// 
// Device: Altera 5CEBA4F23C7 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module test13 (
	clk,
	PinRX,
	PinTX,
	debugLED);
input 	clk;
input 	PinRX;
output 	PinTX;
output 	debugLED;

// Design Ports Information
// PinTX	=>  Location: PIN_K19,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// debugLED	=>  Location: PIN_AA2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_M9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// PinRX	=>  Location: PIN_P18,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \~QUARTUS_CREATED_GND~I_combout ;
wire \clk~input_o ;
wire \clk~inputCLKENA0_outclk ;
wire \ActionDataTransmitToUART~q ;
wire \comb_32|dataCounter~5_combout ;
wire \comb_32|dataCounter~4_combout ;
wire \comb_32|clok2048MbodCounterRX~0_combout ;
wire \comb_32|clok2048MbodCounterRX~2_combout ;
wire \PinRX~input_o ;
wire \comb_32|clok2048MbodCounterRX[0]~1_combout ;
wire \comb_32|clok2048MbodCounterRX[1]~3_combout ;
wire \comb_32|Add0~0_combout ;
wire \comb_32|clok2048MbodCounterRX[2]~4_combout ;
wire \comb_32|Add0~2_combout ;
wire \comb_32|clok2048MbodCounterRX[4]~6_combout ;
wire \comb_32|Add0~3_combout ;
wire \comb_32|clok2048MbodCounterRX[5]~7_combout ;
wire \comb_32|LessThan0~0_combout ;
wire \comb_32|dataCounter[0]~DUPLICATE_q ;
wire \comb_32|dataCounter[1]~DUPLICATE_q ;
wire \comb_32|Equal0~1_combout ;
wire \comb_32|dataCounter~3_combout ;
wire \comb_32|flagOUT_DataResive~0_combout ;
wire \comb_32|dataCounter~1_combout ;
wire \comb_32|Equal0~0_combout ;
wire \comb_32|dataCounter~0_combout ;
wire \comb_32|dataCounter~2_combout ;
wire \comb_32|Equal2~0_combout ;
wire \comb_32|Add0~1_combout ;
wire \comb_32|clok2048MbodCounterRX[3]~5_combout ;
wire \comb_32|always0~6_combout ;
wire \comb_32|flagOUT_DataResive~1_combout ;
wire \comb_32|flagOUT_DataResive~q ;
wire \ActionDataTransmitToUART~0_combout ;
wire \ActionDataTransmitToUART~DUPLICATE_q ;
wire \comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ;
wire \comb_32|dataCounterTX[0]~DUPLICATE_q ;
wire \comb_32|always0~4_combout ;
wire \comb_32|clok2048MbodCounterTX[2]~6_combout ;
wire \comb_32|clok2048MbodCounterTX[2]~DUPLICATE_q ;
wire \comb_32|clok2048MbodCounterTX[3]~7_combout ;
wire \comb_32|clok2048MbodCounterTX[3]~DUPLICATE_q ;
wire \comb_32|Add2~0_combout ;
wire \comb_32|dataCounterTX[2]~DUPLICATE_q ;
wire \comb_32|clok2048MbodCounterTX[5]~1_combout ;
wire \comb_32|clok2048MbodCounterTX[5]~2_combout ;
wire \comb_32|clok2048MbodCounterTX[5]~DUPLICATE_q ;
wire \comb_32|always0~3_combout ;
wire \comb_32|Add2~1_combout ;
wire \comb_32|clok2048MbodCounterTX[4]~3_combout ;
wire \comb_32|clok2048MbodCounterTX[4]~4_combout ;
wire \comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q ;
wire \comb_32|always0~1_combout ;
wire \comb_32|dataCounterTX~4_combout ;
wire \comb_32|dataCounterTX[2]~0_combout ;
wire \comb_32|always0~2_combout ;
wire \comb_32|clok2048MbodCounterTX[0]~0_combout ;
wire \comb_32|clok2048MbodCounterTX[1]~5_combout ;
wire \comb_32|clok2048MbodCounterTX[1]~DUPLICATE_q ;
wire \comb_32|always0~0_combout ;
wire \comb_32|dataCounterTX~2_combout ;
wire \comb_32|dataCounterTX[1]~DUPLICATE_q ;
wire \comb_32|dataCounterTX~1_combout ;
wire \comb_32|dataCounterTX[0]~3_combout ;
wire \comb_32|always0~5_combout ;
wire \comb_32|always0~7_combout ;
wire \comb_32|dataIN[0]~0_combout ;
wire \comb_32|dataIN[1]~DUPLICATE_q ;
wire \comb_32|shiftRegTX~8_combout ;
wire \comb_32|shiftRegTX~7_combout ;
wire \comb_32|shiftRegTX[0]~1_combout ;
wire \comb_32|shiftRegTX~6_combout ;
wire \comb_32|shiftRegTX~5_combout ;
wire \comb_32|shiftRegTX~4_combout ;
wire \comb_32|shiftRegTX~3_combout ;
wire \comb_32|shiftRegTX~2_combout ;
wire \comb_32|shiftRegTX~0_combout ;
wire \comb_32|PinTX~1_combout ;
wire \comb_32|PinTX~0_combout ;
wire \comb_32|PinTX~2_combout ;
wire \comb_32|PinTX~q ;
wire [3:0] \comb_32|dataCounterTX ;
wire [5:0] \comb_32|clok2048MbodCounterTX ;
wire [7:0] \comb_32|shiftRegTX ;
wire [3:0] \comb_32|dataCounter ;
wire [7:0] DataBusToUART;
wire [5:0] \comb_32|clok2048MbodCounterRX ;
wire [7:0] \comb_32|dataIN ;


// Location: IOOBUF_X52_Y45_N19
cyclonev_io_obuf \PinTX~output (
	.i(!\comb_32|PinTX~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(PinTX),
	.obar());
// synopsys translate_off
defparam \PinTX~output .bus_hold = "false";
defparam \PinTX~output .open_drain_output = "false";
defparam \PinTX~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y18_N79
cyclonev_io_obuf \debugLED~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(debugLED),
	.obar());
// synopsys translate_off
defparam \debugLED~output .bus_hold = "false";
defparam \debugLED~output .open_drain_output = "false";
defparam \debugLED~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOIBUF_X22_Y0_N1
cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G6
cyclonev_clkena \clk~inputCLKENA0 (
	.inclk(\clk~input_o ),
	.ena(vcc),
	.outclk(\clk~inputCLKENA0_outclk ),
	.enaout());
// synopsys translate_off
defparam \clk~inputCLKENA0 .clock_type = "global clock";
defparam \clk~inputCLKENA0 .disable_mode = "low";
defparam \clk~inputCLKENA0 .ena_register_mode = "always enabled";
defparam \clk~inputCLKENA0 .ena_register_power_up = "high";
defparam \clk~inputCLKENA0 .test_syn = "high";
// synopsys translate_on

// Location: FF_X52_Y23_N34
dffeas ActionDataTransmitToUART(
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\ActionDataTransmitToUART~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\ActionDataTransmitToUART~q ),
	.prn(vcc));
// synopsys translate_off
defparam ActionDataTransmitToUART.is_wysiwyg = "true";
defparam ActionDataTransmitToUART.power_up = "low";
// synopsys translate_on

// Location: MLABCELL_X49_Y20_N15
cyclonev_lcell_comb \comb_32|dataCounter~5 (
// Equation(s):
// \comb_32|dataCounter~5_combout  = ( \comb_32|dataCounter [3] & ( (!\comb_32|dataCounter [2] & (!\comb_32|always0~6_combout  $ (((!\comb_32|dataCounter [0]))))) # (\comb_32|dataCounter [2] & (((\comb_32|always0~6_combout  & !\comb_32|dataCounter [1])) # 
// (\comb_32|dataCounter [0]))) ) ) # ( !\comb_32|dataCounter [3] & ( (!\comb_32|dataCounter [2] & (\comb_32|dataCounter [0] & ((!\comb_32|always0~6_combout ) # (!\comb_32|dataCounter [1])))) # (\comb_32|dataCounter [2] & (!\comb_32|always0~6_combout  $ 
// (((!\comb_32|dataCounter [0]))))) ) )

	.dataa(!\comb_32|dataCounter [2]),
	.datab(!\comb_32|always0~6_combout ),
	.datac(!\comb_32|dataCounter [1]),
	.datad(!\comb_32|dataCounter [0]),
	.datae(gnd),
	.dataf(!\comb_32|dataCounter [3]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|dataCounter~5_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|dataCounter~5 .extended_lut = "off";
defparam \comb_32|dataCounter~5 .lut_mask = 64'h11EC11EC32DD32DD;
defparam \comb_32|dataCounter~5 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X49_Y20_N16
dffeas \comb_32|dataCounter[0] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|dataCounter~5_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounter [0]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounter[0] .is_wysiwyg = "true";
defparam \comb_32|dataCounter[0] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N24
cyclonev_lcell_comb \comb_32|dataCounter~4 (
// Equation(s):
// \comb_32|dataCounter~4_combout  = ( \comb_32|always0~6_combout  & ( (!\comb_32|dataCounter [0] & ((!\comb_32|dataCounter [2] & (!\comb_32|dataCounter [3] $ (!\comb_32|dataCounter [1]))) # (\comb_32|dataCounter [2] & ((!\comb_32|dataCounter [1]) # 
// (\comb_32|dataCounter [3]))))) # (\comb_32|dataCounter [0] & (\comb_32|dataCounter [1] & ((\comb_32|dataCounter [3]) # (\comb_32|dataCounter [2])))) ) ) # ( !\comb_32|always0~6_combout  & ( \comb_32|dataCounter [1] ) )

	.dataa(!\comb_32|dataCounter [0]),
	.datab(!\comb_32|dataCounter [2]),
	.datac(!\comb_32|dataCounter [3]),
	.datad(!\comb_32|dataCounter [1]),
	.datae(gnd),
	.dataf(!\comb_32|always0~6_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|dataCounter~4_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|dataCounter~4 .extended_lut = "off";
defparam \comb_32|dataCounter~4 .lut_mask = 64'h00FF00FF2A972A97;
defparam \comb_32|dataCounter~4 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X50_Y20_N26
dffeas \comb_32|dataCounter[1] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|dataCounter~4_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounter [1]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounter[1] .is_wysiwyg = "true";
defparam \comb_32|dataCounter[1] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N39
cyclonev_lcell_comb \comb_32|clok2048MbodCounterRX~0 (
// Equation(s):
// \comb_32|clok2048MbodCounterRX~0_combout  = ( !\comb_32|dataCounter [2] & ( !\comb_32|dataCounter [1] & ( !\comb_32|dataCounter [3] ) ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(!\comb_32|dataCounter [3]),
	.datad(gnd),
	.datae(!\comb_32|dataCounter [2]),
	.dataf(!\comb_32|dataCounter [1]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterRX~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX~0 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterRX~0 .lut_mask = 64'hF0F0000000000000;
defparam \comb_32|clok2048MbodCounterRX~0 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N15
cyclonev_lcell_comb \comb_32|clok2048MbodCounterRX~2 (
// Equation(s):
// \comb_32|clok2048MbodCounterRX~2_combout  = ( !\comb_32|LessThan0~0_combout  & ( !\comb_32|clok2048MbodCounterRX~0_combout  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(!\comb_32|clok2048MbodCounterRX~0_combout ),
	.datad(gnd),
	.datae(gnd),
	.dataf(!\comb_32|LessThan0~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterRX~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX~2 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterRX~2 .lut_mask = 64'hF0F0F0F000000000;
defparam \comb_32|clok2048MbodCounterRX~2 .shared_arith = "off";
// synopsys translate_on

// Location: IOIBUF_X54_Y17_N55
cyclonev_io_ibuf \PinRX~input (
	.i(PinRX),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\PinRX~input_o ));
// synopsys translate_off
defparam \PinRX~input .bus_hold = "false";
defparam \PinRX~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N6
cyclonev_lcell_comb \comb_32|clok2048MbodCounterRX[0]~1 (
// Equation(s):
// \comb_32|clok2048MbodCounterRX[0]~1_combout  = ( \comb_32|clok2048MbodCounterRX [0] & ( \comb_32|clok2048MbodCounterRX~0_combout  & ( (!\comb_32|always0~6_combout ) # (\comb_32|Equal2~0_combout ) ) ) ) # ( !\comb_32|clok2048MbodCounterRX [0] & ( 
// \comb_32|clok2048MbodCounterRX~0_combout  & ( (!\PinRX~input_o  & \comb_32|Equal2~0_combout ) ) ) ) # ( \comb_32|clok2048MbodCounterRX [0] & ( !\comb_32|clok2048MbodCounterRX~0_combout  & ( (\comb_32|LessThan0~0_combout  & ((!\comb_32|always0~6_combout ) 
// # (\comb_32|Equal2~0_combout ))) ) ) ) # ( !\comb_32|clok2048MbodCounterRX [0] & ( !\comb_32|clok2048MbodCounterRX~0_combout  & ( (!\comb_32|Equal2~0_combout  & (!\comb_32|always0~6_combout  & ((!\comb_32|LessThan0~0_combout )))) # 
// (\comb_32|Equal2~0_combout  & (((!\PinRX~input_o ) # (!\comb_32|LessThan0~0_combout )))) ) ) )

	.dataa(!\comb_32|always0~6_combout ),
	.datab(!\PinRX~input_o ),
	.datac(!\comb_32|Equal2~0_combout ),
	.datad(!\comb_32|LessThan0~0_combout ),
	.datae(!\comb_32|clok2048MbodCounterRX [0]),
	.dataf(!\comb_32|clok2048MbodCounterRX~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterRX[0]~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX[0]~1 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterRX[0]~1 .lut_mask = 64'hAF0C00AF0C0CAFAF;
defparam \comb_32|clok2048MbodCounterRX[0]~1 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X50_Y20_N8
dffeas \comb_32|clok2048MbodCounterRX[0] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterRX[0]~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterRX [0]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX[0] .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterRX[0] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N48
cyclonev_lcell_comb \comb_32|clok2048MbodCounterRX[1]~3 (
// Equation(s):
// \comb_32|clok2048MbodCounterRX[1]~3_combout  = ( \comb_32|clok2048MbodCounterRX [1] & ( \comb_32|clok2048MbodCounterRX [0] & ( (!\comb_32|clok2048MbodCounterRX~2_combout  & ((!\comb_32|always0~6_combout ) # (\comb_32|Equal2~0_combout ))) ) ) ) # ( 
// !\comb_32|clok2048MbodCounterRX [1] & ( \comb_32|clok2048MbodCounterRX [0] & ( (!\comb_32|Equal2~0_combout  & (!\comb_32|always0~6_combout  & ((\comb_32|clok2048MbodCounterRX~2_combout )))) # (\comb_32|Equal2~0_combout  & (((!\PinRX~input_o ) # 
// (\comb_32|clok2048MbodCounterRX~2_combout )))) ) ) ) # ( \comb_32|clok2048MbodCounterRX [1] & ( !\comb_32|clok2048MbodCounterRX [0] & ( (!\comb_32|always0~6_combout ) # (\comb_32|Equal2~0_combout ) ) ) ) # ( !\comb_32|clok2048MbodCounterRX [1] & ( 
// !\comb_32|clok2048MbodCounterRX [0] & ( (\comb_32|Equal2~0_combout  & (!\PinRX~input_o  & !\comb_32|clok2048MbodCounterRX~2_combout )) ) ) )

	.dataa(!\comb_32|Equal2~0_combout ),
	.datab(!\comb_32|always0~6_combout ),
	.datac(!\PinRX~input_o ),
	.datad(!\comb_32|clok2048MbodCounterRX~2_combout ),
	.datae(!\comb_32|clok2048MbodCounterRX [1]),
	.dataf(!\comb_32|clok2048MbodCounterRX [0]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterRX[1]~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX[1]~3 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterRX[1]~3 .lut_mask = 64'h5000DDDD50DDDD00;
defparam \comb_32|clok2048MbodCounterRX[1]~3 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X50_Y20_N50
dffeas \comb_32|clok2048MbodCounterRX[1] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterRX[1]~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterRX [1]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX[1] .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterRX[1] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N27
cyclonev_lcell_comb \comb_32|Add0~0 (
// Equation(s):
// \comb_32|Add0~0_combout  = ( \comb_32|clok2048MbodCounterRX [1] & ( \comb_32|clok2048MbodCounterRX [0] ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(!\comb_32|clok2048MbodCounterRX [0]),
	.datad(gnd),
	.datae(gnd),
	.dataf(!\comb_32|clok2048MbodCounterRX [1]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|Add0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|Add0~0 .extended_lut = "off";
defparam \comb_32|Add0~0 .lut_mask = 64'h000000000F0F0F0F;
defparam \comb_32|Add0~0 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N57
cyclonev_lcell_comb \comb_32|clok2048MbodCounterRX[2]~4 (
// Equation(s):
// \comb_32|clok2048MbodCounterRX[2]~4_combout  = ( \comb_32|clok2048MbodCounterRX [2] & ( \comb_32|Add0~0_combout  & ( (!\comb_32|clok2048MbodCounterRX~2_combout  & ((!\comb_32|Equal2~0_combout  & (!\comb_32|always0~6_combout )) # (\comb_32|Equal2~0_combout 
//  & ((\PinRX~input_o ))))) ) ) ) # ( !\comb_32|clok2048MbodCounterRX [2] & ( \comb_32|Add0~0_combout  & ( (\comb_32|clok2048MbodCounterRX~2_combout  & ((!\comb_32|always0~6_combout ) # (\comb_32|Equal2~0_combout ))) ) ) ) # ( \comb_32|clok2048MbodCounterRX 
// [2] & ( !\comb_32|Add0~0_combout  & ( (!\comb_32|Equal2~0_combout  & (!\comb_32|always0~6_combout )) # (\comb_32|Equal2~0_combout  & (((\PinRX~input_o ) # (\comb_32|clok2048MbodCounterRX~2_combout )))) ) ) )

	.dataa(!\comb_32|Equal2~0_combout ),
	.datab(!\comb_32|always0~6_combout ),
	.datac(!\comb_32|clok2048MbodCounterRX~2_combout ),
	.datad(!\PinRX~input_o ),
	.datae(!\comb_32|clok2048MbodCounterRX [2]),
	.dataf(!\comb_32|Add0~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterRX[2]~4_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX[2]~4 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterRX[2]~4 .lut_mask = 64'h00008DDD0D0D80D0;
defparam \comb_32|clok2048MbodCounterRX[2]~4 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X50_Y20_N59
dffeas \comb_32|clok2048MbodCounterRX[2] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterRX[2]~4_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterRX [2]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX[2] .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterRX[2] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N33
cyclonev_lcell_comb \comb_32|Add0~2 (
// Equation(s):
// \comb_32|Add0~2_combout  = (\comb_32|clok2048MbodCounterRX [1] & (\comb_32|clok2048MbodCounterRX [0] & (\comb_32|clok2048MbodCounterRX [2] & \comb_32|clok2048MbodCounterRX [3])))

	.dataa(!\comb_32|clok2048MbodCounterRX [1]),
	.datab(!\comb_32|clok2048MbodCounterRX [0]),
	.datac(!\comb_32|clok2048MbodCounterRX [2]),
	.datad(!\comb_32|clok2048MbodCounterRX [3]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|Add0~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|Add0~2 .extended_lut = "off";
defparam \comb_32|Add0~2 .lut_mask = 64'h0001000100010001;
defparam \comb_32|Add0~2 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N0
cyclonev_lcell_comb \comb_32|clok2048MbodCounterRX[4]~6 (
// Equation(s):
// \comb_32|clok2048MbodCounterRX[4]~6_combout  = ( \comb_32|clok2048MbodCounterRX [4] & ( \comb_32|always0~6_combout  & ( (\comb_32|Equal2~0_combout  & ((!\comb_32|clok2048MbodCounterRX~2_combout  & ((\PinRX~input_o ))) # 
// (\comb_32|clok2048MbodCounterRX~2_combout  & (!\comb_32|Add0~2_combout )))) ) ) ) # ( !\comb_32|clok2048MbodCounterRX [4] & ( \comb_32|always0~6_combout  & ( (\comb_32|Add0~2_combout  & (\comb_32|clok2048MbodCounterRX~2_combout  & 
// \comb_32|Equal2~0_combout )) ) ) ) # ( \comb_32|clok2048MbodCounterRX [4] & ( !\comb_32|always0~6_combout  & ( (!\comb_32|clok2048MbodCounterRX~2_combout  & (((!\comb_32|Equal2~0_combout ) # (\PinRX~input_o )))) # (\comb_32|clok2048MbodCounterRX~2_combout 
//  & (!\comb_32|Add0~2_combout )) ) ) ) # ( !\comb_32|clok2048MbodCounterRX [4] & ( !\comb_32|always0~6_combout  & ( (\comb_32|Add0~2_combout  & \comb_32|clok2048MbodCounterRX~2_combout ) ) ) )

	.dataa(!\comb_32|Add0~2_combout ),
	.datab(!\comb_32|clok2048MbodCounterRX~2_combout ),
	.datac(!\comb_32|Equal2~0_combout ),
	.datad(!\PinRX~input_o ),
	.datae(!\comb_32|clok2048MbodCounterRX [4]),
	.dataf(!\comb_32|always0~6_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterRX[4]~6_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX[4]~6 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterRX[4]~6 .lut_mask = 64'h1111E2EE0101020E;
defparam \comb_32|clok2048MbodCounterRX[4]~6 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X50_Y20_N2
dffeas \comb_32|clok2048MbodCounterRX[4] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterRX[4]~6_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterRX [4]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX[4] .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterRX[4] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N12
cyclonev_lcell_comb \comb_32|Add0~3 (
// Equation(s):
// \comb_32|Add0~3_combout  = ( \comb_32|clok2048MbodCounterRX [0] & ( (\comb_32|clok2048MbodCounterRX [1] & (\comb_32|clok2048MbodCounterRX [2] & (\comb_32|clok2048MbodCounterRX [3] & \comb_32|clok2048MbodCounterRX [4]))) ) )

	.dataa(!\comb_32|clok2048MbodCounterRX [1]),
	.datab(!\comb_32|clok2048MbodCounterRX [2]),
	.datac(!\comb_32|clok2048MbodCounterRX [3]),
	.datad(!\comb_32|clok2048MbodCounterRX [4]),
	.datae(gnd),
	.dataf(!\comb_32|clok2048MbodCounterRX [0]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|Add0~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|Add0~3 .extended_lut = "off";
defparam \comb_32|Add0~3 .lut_mask = 64'h0000000000010001;
defparam \comb_32|Add0~3 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N51
cyclonev_lcell_comb \comb_32|clok2048MbodCounterRX[5]~7 (
// Equation(s):
// \comb_32|clok2048MbodCounterRX[5]~7_combout  = ( \comb_32|clok2048MbodCounterRX [5] & ( \comb_32|Add0~3_combout  & ( (!\comb_32|clok2048MbodCounterRX~2_combout  & ((!\comb_32|always0~6_combout ) # (\comb_32|Equal2~0_combout ))) ) ) ) # ( 
// !\comb_32|clok2048MbodCounterRX [5] & ( \comb_32|Add0~3_combout  & ( (!\comb_32|Equal2~0_combout  & (!\comb_32|always0~6_combout  & (\comb_32|clok2048MbodCounterRX~2_combout ))) # (\comb_32|Equal2~0_combout  & (((!\PinRX~input_o ) # 
// (\comb_32|clok2048MbodCounterRX~2_combout )))) ) ) ) # ( \comb_32|clok2048MbodCounterRX [5] & ( !\comb_32|Add0~3_combout  & ( (!\comb_32|always0~6_combout ) # (\comb_32|Equal2~0_combout ) ) ) ) # ( !\comb_32|clok2048MbodCounterRX [5] & ( 
// !\comb_32|Add0~3_combout  & ( (\comb_32|Equal2~0_combout  & (!\comb_32|clok2048MbodCounterRX~2_combout  & !\PinRX~input_o )) ) ) )

	.dataa(!\comb_32|Equal2~0_combout ),
	.datab(!\comb_32|always0~6_combout ),
	.datac(!\comb_32|clok2048MbodCounterRX~2_combout ),
	.datad(!\PinRX~input_o ),
	.datae(!\comb_32|clok2048MbodCounterRX [5]),
	.dataf(!\comb_32|Add0~3_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterRX[5]~7_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX[5]~7 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterRX[5]~7 .lut_mask = 64'h5000DDDD5D0DD0D0;
defparam \comb_32|clok2048MbodCounterRX[5]~7 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X50_Y20_N53
dffeas \comb_32|clok2048MbodCounterRX[5] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterRX[5]~7_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterRX [5]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX[5] .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterRX[5] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N42
cyclonev_lcell_comb \comb_32|LessThan0~0 (
// Equation(s):
// \comb_32|LessThan0~0_combout  = ( \comb_32|clok2048MbodCounterRX [4] & ( \comb_32|clok2048MbodCounterRX [1] & ( \comb_32|clok2048MbodCounterRX [5] ) ) ) # ( \comb_32|clok2048MbodCounterRX [4] & ( !\comb_32|clok2048MbodCounterRX [1] & ( 
// (\comb_32|clok2048MbodCounterRX [5] & (((\comb_32|clok2048MbodCounterRX [0]) # (\comb_32|clok2048MbodCounterRX [2])) # (\comb_32|clok2048MbodCounterRX [3]))) ) ) )

	.dataa(!\comb_32|clok2048MbodCounterRX [3]),
	.datab(!\comb_32|clok2048MbodCounterRX [2]),
	.datac(!\comb_32|clok2048MbodCounterRX [5]),
	.datad(!\comb_32|clok2048MbodCounterRX [0]),
	.datae(!\comb_32|clok2048MbodCounterRX [4]),
	.dataf(!\comb_32|clok2048MbodCounterRX [1]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|LessThan0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|LessThan0~0 .extended_lut = "off";
defparam \comb_32|LessThan0~0 .lut_mask = 64'h0000070F00000F0F;
defparam \comb_32|LessThan0~0 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X49_Y20_N17
dffeas \comb_32|dataCounter[0]~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|dataCounter~5_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounter[0]~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounter[0]~DUPLICATE .is_wysiwyg = "true";
defparam \comb_32|dataCounter[0]~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: FF_X50_Y20_N25
dffeas \comb_32|dataCounter[1]~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|dataCounter~4_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounter[1]~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounter[1]~DUPLICATE .is_wysiwyg = "true";
defparam \comb_32|dataCounter[1]~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: MLABCELL_X49_Y20_N18
cyclonev_lcell_comb \comb_32|Equal0~1 (
// Equation(s):
// \comb_32|Equal0~1_combout  = (!\comb_32|dataCounter[0]~DUPLICATE_q  & !\comb_32|dataCounter[1]~DUPLICATE_q )

	.dataa(gnd),
	.datab(!\comb_32|dataCounter[0]~DUPLICATE_q ),
	.datac(!\comb_32|dataCounter[1]~DUPLICATE_q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|Equal0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|Equal0~1 .extended_lut = "off";
defparam \comb_32|Equal0~1 .lut_mask = 64'hC0C0C0C0C0C0C0C0;
defparam \comb_32|Equal0~1 .shared_arith = "off";
// synopsys translate_on

// Location: MLABCELL_X49_Y20_N36
cyclonev_lcell_comb \comb_32|dataCounter~3 (
// Equation(s):
// \comb_32|dataCounter~3_combout  = ( \comb_32|dataCounter [3] & ( \comb_32|always0~6_combout  & ( (!\comb_32|Equal0~1_combout ) # (\comb_32|dataCounter [2]) ) ) ) # ( !\comb_32|dataCounter [3] & ( \comb_32|always0~6_combout  & ( (!\comb_32|dataCounter [2] 
// & (\comb_32|Equal0~1_combout  & !\PinRX~input_o )) ) ) ) # ( \comb_32|dataCounter [3] & ( !\comb_32|always0~6_combout  & ( (!\comb_32|dataCounter [2]) # (((!\comb_32|Equal0~1_combout ) # (!\PinRX~input_o )) # (\comb_32|LessThan0~0_combout )) ) ) ) # ( 
// !\comb_32|dataCounter [3] & ( !\comb_32|always0~6_combout  & ( (!\comb_32|dataCounter [2] & (\comb_32|Equal0~1_combout  & !\PinRX~input_o )) ) ) )

	.dataa(!\comb_32|dataCounter [2]),
	.datab(!\comb_32|LessThan0~0_combout ),
	.datac(!\comb_32|Equal0~1_combout ),
	.datad(!\PinRX~input_o ),
	.datae(!\comb_32|dataCounter [3]),
	.dataf(!\comb_32|always0~6_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|dataCounter~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|dataCounter~3 .extended_lut = "off";
defparam \comb_32|dataCounter~3 .lut_mask = 64'h0A00FFFB0A00F5F5;
defparam \comb_32|dataCounter~3 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X49_Y20_N38
dffeas \comb_32|dataCounter[3] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|dataCounter~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounter [3]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounter[3] .is_wysiwyg = "true";
defparam \comb_32|dataCounter[3] .power_up = "low";
// synopsys translate_on

// Location: MLABCELL_X49_Y20_N51
cyclonev_lcell_comb \comb_32|flagOUT_DataResive~0 (
// Equation(s):
// \comb_32|flagOUT_DataResive~0_combout  = ( \comb_32|dataCounter[1]~DUPLICATE_q  & ( \comb_32|dataCounter[0]~DUPLICATE_q  & ( (!\comb_32|dataCounter [2] & !\comb_32|dataCounter [3]) ) ) )

	.dataa(!\comb_32|dataCounter [2]),
	.datab(gnd),
	.datac(gnd),
	.datad(!\comb_32|dataCounter [3]),
	.datae(!\comb_32|dataCounter[1]~DUPLICATE_q ),
	.dataf(!\comb_32|dataCounter[0]~DUPLICATE_q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|flagOUT_DataResive~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|flagOUT_DataResive~0 .extended_lut = "off";
defparam \comb_32|flagOUT_DataResive~0 .lut_mask = 64'h000000000000AA00;
defparam \comb_32|flagOUT_DataResive~0 .shared_arith = "off";
// synopsys translate_on

// Location: MLABCELL_X49_Y20_N9
cyclonev_lcell_comb \comb_32|dataCounter~1 (
// Equation(s):
// \comb_32|dataCounter~1_combout  = ( !\comb_32|Equal2~0_combout  & ( !\comb_32|flagOUT_DataResive~0_combout  & ( \comb_32|always0~6_combout  ) ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(!\comb_32|always0~6_combout ),
	.datad(gnd),
	.datae(!\comb_32|Equal2~0_combout ),
	.dataf(!\comb_32|flagOUT_DataResive~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|dataCounter~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|dataCounter~1 .extended_lut = "off";
defparam \comb_32|dataCounter~1 .lut_mask = 64'h0F0F000000000000;
defparam \comb_32|dataCounter~1 .shared_arith = "off";
// synopsys translate_on

// Location: MLABCELL_X49_Y20_N30
cyclonev_lcell_comb \comb_32|Equal0~0 (
// Equation(s):
// \comb_32|Equal0~0_combout  = ( \comb_32|dataCounter [3] & ( !\comb_32|dataCounter[1]~DUPLICATE_q  & ( (!\comb_32|dataCounter[0]~DUPLICATE_q  & \comb_32|dataCounter [2]) ) ) )

	.dataa(gnd),
	.datab(!\comb_32|dataCounter[0]~DUPLICATE_q ),
	.datac(!\comb_32|dataCounter [2]),
	.datad(gnd),
	.datae(!\comb_32|dataCounter [3]),
	.dataf(!\comb_32|dataCounter[1]~DUPLICATE_q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|Equal0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|Equal0~0 .extended_lut = "off";
defparam \comb_32|Equal0~0 .lut_mask = 64'h00000C0C00000000;
defparam \comb_32|Equal0~0 .shared_arith = "off";
// synopsys translate_on

// Location: MLABCELL_X49_Y20_N24
cyclonev_lcell_comb \comb_32|dataCounter~0 (
// Equation(s):
// \comb_32|dataCounter~0_combout  = ( \comb_32|LessThan0~0_combout  & ( \comb_32|flagOUT_DataResive~0_combout  & ( (!\comb_32|Equal2~0_combout  & \comb_32|always0~6_combout ) ) ) ) # ( !\comb_32|LessThan0~0_combout  & ( \comb_32|flagOUT_DataResive~0_combout 
//  & ( (!\comb_32|Equal2~0_combout  & (((\PinRX~input_o  & \comb_32|Equal0~0_combout )) # (\comb_32|always0~6_combout ))) ) ) ) # ( \comb_32|LessThan0~0_combout  & ( !\comb_32|flagOUT_DataResive~0_combout  & ( (\comb_32|Equal0~0_combout  & 
// (!\comb_32|Equal2~0_combout  & \comb_32|always0~6_combout )) ) ) ) # ( !\comb_32|LessThan0~0_combout  & ( !\comb_32|flagOUT_DataResive~0_combout  & ( (\comb_32|Equal0~0_combout  & (!\comb_32|Equal2~0_combout  & ((\comb_32|always0~6_combout ) # 
// (\PinRX~input_o )))) ) ) )

	.dataa(!\PinRX~input_o ),
	.datab(!\comb_32|Equal0~0_combout ),
	.datac(!\comb_32|Equal2~0_combout ),
	.datad(!\comb_32|always0~6_combout ),
	.datae(!\comb_32|LessThan0~0_combout ),
	.dataf(!\comb_32|flagOUT_DataResive~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|dataCounter~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|dataCounter~0 .extended_lut = "off";
defparam \comb_32|dataCounter~0 .lut_mask = 64'h1030003010F000F0;
defparam \comb_32|dataCounter~0 .shared_arith = "off";
// synopsys translate_on

// Location: MLABCELL_X49_Y20_N54
cyclonev_lcell_comb \comb_32|dataCounter~2 (
// Equation(s):
// \comb_32|dataCounter~2_combout  = ( \comb_32|dataCounter [2] & ( \comb_32|dataCounter~0_combout  & ( (!\comb_32|Equal0~1_combout  & \comb_32|dataCounter~1_combout ) ) ) ) # ( !\comb_32|dataCounter [2] & ( \comb_32|dataCounter~0_combout  & ( 
// (\comb_32|Equal0~1_combout  & \comb_32|dataCounter~1_combout ) ) ) ) # ( \comb_32|dataCounter [2] & ( !\comb_32|dataCounter~0_combout  & ( ((!\comb_32|Equal0~1_combout ) # (!\comb_32|dataCounter~1_combout )) # (\comb_32|dataCounter [3]) ) ) ) # ( 
// !\comb_32|dataCounter [2] & ( !\comb_32|dataCounter~0_combout  & ( (\comb_32|Equal0~1_combout  & ((!\comb_32|dataCounter [3] & (!\PinRX~input_o )) # (\comb_32|dataCounter [3] & ((\comb_32|dataCounter~1_combout ))))) ) ) )

	.dataa(!\comb_32|dataCounter [3]),
	.datab(!\PinRX~input_o ),
	.datac(!\comb_32|Equal0~1_combout ),
	.datad(!\comb_32|dataCounter~1_combout ),
	.datae(!\comb_32|dataCounter [2]),
	.dataf(!\comb_32|dataCounter~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|dataCounter~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|dataCounter~2 .extended_lut = "off";
defparam \comb_32|dataCounter~2 .lut_mask = 64'h080DFFF5000F00F0;
defparam \comb_32|dataCounter~2 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X49_Y20_N56
dffeas \comb_32|dataCounter[2] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|dataCounter~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounter [2]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounter[2] .is_wysiwyg = "true";
defparam \comb_32|dataCounter[2] .power_up = "low";
// synopsys translate_on

// Location: MLABCELL_X49_Y20_N21
cyclonev_lcell_comb \comb_32|Equal2~0 (
// Equation(s):
// \comb_32|Equal2~0_combout  = ( !\comb_32|dataCounter[0]~DUPLICATE_q  & ( (!\comb_32|dataCounter [2] & (!\comb_32|dataCounter [1] & !\comb_32|dataCounter [3])) ) )

	.dataa(!\comb_32|dataCounter [2]),
	.datab(gnd),
	.datac(!\comb_32|dataCounter [1]),
	.datad(!\comb_32|dataCounter [3]),
	.datae(gnd),
	.dataf(!\comb_32|dataCounter[0]~DUPLICATE_q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|Equal2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|Equal2~0 .extended_lut = "off";
defparam \comb_32|Equal2~0 .lut_mask = 64'hA000A00000000000;
defparam \comb_32|Equal2~0 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N30
cyclonev_lcell_comb \comb_32|Add0~1 (
// Equation(s):
// \comb_32|Add0~1_combout  = ( \comb_32|clok2048MbodCounterRX [1] & ( (\comb_32|clok2048MbodCounterRX [0] & \comb_32|clok2048MbodCounterRX [2]) ) )

	.dataa(gnd),
	.datab(!\comb_32|clok2048MbodCounterRX [0]),
	.datac(gnd),
	.datad(!\comb_32|clok2048MbodCounterRX [2]),
	.datae(gnd),
	.dataf(!\comb_32|clok2048MbodCounterRX [1]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|Add0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|Add0~1 .extended_lut = "off";
defparam \comb_32|Add0~1 .lut_mask = 64'h0000000000330033;
defparam \comb_32|Add0~1 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N54
cyclonev_lcell_comb \comb_32|clok2048MbodCounterRX[3]~5 (
// Equation(s):
// \comb_32|clok2048MbodCounterRX[3]~5_combout  = ( \comb_32|clok2048MbodCounterRX [3] & ( \comb_32|Add0~1_combout  & ( (!\comb_32|clok2048MbodCounterRX~2_combout  & ((!\comb_32|Equal2~0_combout  & (!\comb_32|always0~6_combout )) # (\comb_32|Equal2~0_combout 
//  & ((\PinRX~input_o ))))) ) ) ) # ( !\comb_32|clok2048MbodCounterRX [3] & ( \comb_32|Add0~1_combout  & ( (\comb_32|clok2048MbodCounterRX~2_combout  & ((!\comb_32|always0~6_combout ) # (\comb_32|Equal2~0_combout ))) ) ) ) # ( \comb_32|clok2048MbodCounterRX 
// [3] & ( !\comb_32|Add0~1_combout  & ( (!\comb_32|Equal2~0_combout  & (!\comb_32|always0~6_combout )) # (\comb_32|Equal2~0_combout  & (((\comb_32|clok2048MbodCounterRX~2_combout ) # (\PinRX~input_o )))) ) ) )

	.dataa(!\comb_32|Equal2~0_combout ),
	.datab(!\comb_32|always0~6_combout ),
	.datac(!\PinRX~input_o ),
	.datad(!\comb_32|clok2048MbodCounterRX~2_combout ),
	.datae(!\comb_32|clok2048MbodCounterRX [3]),
	.dataf(!\comb_32|Add0~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterRX[3]~5_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX[3]~5 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterRX[3]~5 .lut_mask = 64'h00008DDD00DD8D00;
defparam \comb_32|clok2048MbodCounterRX[3]~5 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X50_Y20_N56
dffeas \comb_32|clok2048MbodCounterRX[3] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterRX[3]~5_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterRX [3]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterRX[3] .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterRX[3] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X50_Y20_N18
cyclonev_lcell_comb \comb_32|always0~6 (
// Equation(s):
// \comb_32|always0~6_combout  = ( \comb_32|clok2048MbodCounterRX [4] & ( !\comb_32|clok2048MbodCounterRX [1] & ( (!\comb_32|clok2048MbodCounterRX [3] & (\comb_32|clok2048MbodCounterRX [0] & (\comb_32|clok2048MbodCounterRX [5] & 
// !\comb_32|clok2048MbodCounterRX [2]))) ) ) )

	.dataa(!\comb_32|clok2048MbodCounterRX [3]),
	.datab(!\comb_32|clok2048MbodCounterRX [0]),
	.datac(!\comb_32|clok2048MbodCounterRX [5]),
	.datad(!\comb_32|clok2048MbodCounterRX [2]),
	.datae(!\comb_32|clok2048MbodCounterRX [4]),
	.dataf(!\comb_32|clok2048MbodCounterRX [1]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|always0~6_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|always0~6 .extended_lut = "off";
defparam \comb_32|always0~6 .lut_mask = 64'h0000020000000000;
defparam \comb_32|always0~6 .shared_arith = "off";
// synopsys translate_on

// Location: MLABCELL_X49_Y20_N12
cyclonev_lcell_comb \comb_32|flagOUT_DataResive~1 (
// Equation(s):
// \comb_32|flagOUT_DataResive~1_combout  = ( \comb_32|flagOUT_DataResive~0_combout  & ( (\comb_32|always0~6_combout  & !\comb_32|Equal2~0_combout ) ) )

	.dataa(gnd),
	.datab(!\comb_32|always0~6_combout ),
	.datac(gnd),
	.datad(!\comb_32|Equal2~0_combout ),
	.datae(gnd),
	.dataf(!\comb_32|flagOUT_DataResive~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|flagOUT_DataResive~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|flagOUT_DataResive~1 .extended_lut = "off";
defparam \comb_32|flagOUT_DataResive~1 .lut_mask = 64'h0000000033003300;
defparam \comb_32|flagOUT_DataResive~1 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X49_Y20_N14
dffeas \comb_32|flagOUT_DataResive (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|flagOUT_DataResive~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|flagOUT_DataResive~q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|flagOUT_DataResive .is_wysiwyg = "true";
defparam \comb_32|flagOUT_DataResive .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N33
cyclonev_lcell_comb \ActionDataTransmitToUART~0 (
// Equation(s):
// \ActionDataTransmitToUART~0_combout  = ( \comb_32|flagOUT_DataResive~q  & ( !\ActionDataTransmitToUART~q  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\ActionDataTransmitToUART~q ),
	.datae(gnd),
	.dataf(!\comb_32|flagOUT_DataResive~q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\ActionDataTransmitToUART~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \ActionDataTransmitToUART~0 .extended_lut = "off";
defparam \ActionDataTransmitToUART~0 .lut_mask = 64'h00000000FF00FF00;
defparam \ActionDataTransmitToUART~0 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N35
dffeas \ActionDataTransmitToUART~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\ActionDataTransmitToUART~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\ActionDataTransmitToUART~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \ActionDataTransmitToUART~DUPLICATE .is_wysiwyg = "true";
defparam \ActionDataTransmitToUART~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: FF_X52_Y23_N16
dffeas \comb_32|clok2048MbodCounterTX[0]~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterTX[0]~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[0]~DUPLICATE .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterTX[0]~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: FF_X52_Y23_N38
dffeas \comb_32|dataCounterTX[1] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|dataCounterTX~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounterTX [1]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounterTX[1] .is_wysiwyg = "true";
defparam \comb_32|dataCounterTX[1] .power_up = "low";
// synopsys translate_on

// Location: FF_X53_Y23_N19
dffeas \comb_32|dataCounterTX[0]~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|dataCounterTX[0]~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounterTX[0]~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounterTX[0]~DUPLICATE .is_wysiwyg = "true";
defparam \comb_32|dataCounterTX[0]~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: FF_X52_Y23_N40
dffeas \comb_32|clok2048MbodCounterTX[1] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|clok2048MbodCounterTX[1]~5_combout ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterTX [1]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[1] .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterTX[1] .power_up = "low";
// synopsys translate_on

// Location: FF_X52_Y23_N14
dffeas \comb_32|clok2048MbodCounterTX[2] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterTX[2]~6_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterTX [2]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[2] .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterTX[2] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N0
cyclonev_lcell_comb \comb_32|always0~4 (
// Equation(s):
// \comb_32|always0~4_combout  = ( \comb_32|always0~0_combout  & ( (!\ActionDataTransmitToUART~q  & ((!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ) # (!\comb_32|always0~3_combout ))) ) ) # ( !\comb_32|always0~0_combout  & ( (!\comb_32|always0~3_combout  & 
// !\ActionDataTransmitToUART~q ) ) )

	.dataa(gnd),
	.datab(!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ),
	.datac(!\comb_32|always0~3_combout ),
	.datad(!\ActionDataTransmitToUART~q ),
	.datae(gnd),
	.dataf(!\comb_32|always0~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|always0~4_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|always0~4 .extended_lut = "off";
defparam \comb_32|always0~4 .lut_mask = 64'hF000F000FC00FC00;
defparam \comb_32|always0~4 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N12
cyclonev_lcell_comb \comb_32|clok2048MbodCounterTX[2]~6 (
// Equation(s):
// \comb_32|clok2048MbodCounterTX[2]~6_combout  = ( \comb_32|always0~4_combout  & ( !\comb_32|clok2048MbodCounterTX [2] $ (((!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ) # (!\comb_32|clok2048MbodCounterTX[1]~DUPLICATE_q ))) ) ) # ( 
// !\comb_32|always0~4_combout  & ( (!\comb_32|always0~2_combout  & \comb_32|clok2048MbodCounterTX [2]) ) )

	.dataa(!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ),
	.datab(!\comb_32|always0~2_combout ),
	.datac(!\comb_32|clok2048MbodCounterTX[1]~DUPLICATE_q ),
	.datad(!\comb_32|clok2048MbodCounterTX [2]),
	.datae(gnd),
	.dataf(!\comb_32|always0~4_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterTX[2]~6_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[2]~6 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterTX[2]~6 .lut_mask = 64'h00CC00CC05FA05FA;
defparam \comb_32|clok2048MbodCounterTX[2]~6 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N13
dffeas \comb_32|clok2048MbodCounterTX[2]~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterTX[2]~6_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterTX[2]~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[2]~DUPLICATE .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterTX[2]~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: FF_X53_Y23_N26
dffeas \comb_32|clok2048MbodCounterTX[3] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterTX[3]~7_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterTX [3]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[3] .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterTX[3] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N24
cyclonev_lcell_comb \comb_32|clok2048MbodCounterTX[3]~7 (
// Equation(s):
// \comb_32|clok2048MbodCounterTX[3]~7_combout  = ( \comb_32|clok2048MbodCounterTX [3] & ( \comb_32|always0~2_combout  & ( (\comb_32|always0~4_combout  & ((!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ) # ((!\comb_32|clok2048MbodCounterTX [1]) # 
// (!\comb_32|clok2048MbodCounterTX[2]~DUPLICATE_q )))) ) ) ) # ( !\comb_32|clok2048MbodCounterTX [3] & ( \comb_32|always0~2_combout  & ( (\comb_32|always0~4_combout  & (\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q  & (\comb_32|clok2048MbodCounterTX [1] & 
// \comb_32|clok2048MbodCounterTX[2]~DUPLICATE_q ))) ) ) ) # ( \comb_32|clok2048MbodCounterTX [3] & ( !\comb_32|always0~2_combout  & ( (!\comb_32|always0~4_combout ) # ((!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ) # ((!\comb_32|clok2048MbodCounterTX 
// [1]) # (!\comb_32|clok2048MbodCounterTX[2]~DUPLICATE_q ))) ) ) ) # ( !\comb_32|clok2048MbodCounterTX [3] & ( !\comb_32|always0~2_combout  & ( (\comb_32|always0~4_combout  & (\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q  & (\comb_32|clok2048MbodCounterTX 
// [1] & \comb_32|clok2048MbodCounterTX[2]~DUPLICATE_q ))) ) ) )

	.dataa(!\comb_32|always0~4_combout ),
	.datab(!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ),
	.datac(!\comb_32|clok2048MbodCounterTX [1]),
	.datad(!\comb_32|clok2048MbodCounterTX[2]~DUPLICATE_q ),
	.datae(!\comb_32|clok2048MbodCounterTX [3]),
	.dataf(!\comb_32|always0~2_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterTX[3]~7_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[3]~7 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterTX[3]~7 .lut_mask = 64'h0001FFFE00015554;
defparam \comb_32|clok2048MbodCounterTX[3]~7 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X53_Y23_N25
dffeas \comb_32|clok2048MbodCounterTX[3]~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterTX[3]~7_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterTX[3]~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[3]~DUPLICATE .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterTX[3]~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N48
cyclonev_lcell_comb \comb_32|Add2~0 (
// Equation(s):
// \comb_32|Add2~0_combout  = ( \comb_32|clok2048MbodCounterTX[3]~DUPLICATE_q  & ( \comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q  & ( !\comb_32|clok2048MbodCounterTX[5]~DUPLICATE_q  $ (((!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ) # 
// ((!\comb_32|clok2048MbodCounterTX [1]) # (!\comb_32|clok2048MbodCounterTX[2]~DUPLICATE_q )))) ) ) ) # ( !\comb_32|clok2048MbodCounterTX[3]~DUPLICATE_q  & ( \comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q  & ( \comb_32|clok2048MbodCounterTX[5]~DUPLICATE_q  ) 
// ) ) # ( \comb_32|clok2048MbodCounterTX[3]~DUPLICATE_q  & ( !\comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q  & ( \comb_32|clok2048MbodCounterTX[5]~DUPLICATE_q  ) ) ) # ( !\comb_32|clok2048MbodCounterTX[3]~DUPLICATE_q  & ( 
// !\comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q  & ( \comb_32|clok2048MbodCounterTX[5]~DUPLICATE_q  ) ) )

	.dataa(!\comb_32|clok2048MbodCounterTX[5]~DUPLICATE_q ),
	.datab(!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ),
	.datac(!\comb_32|clok2048MbodCounterTX [1]),
	.datad(!\comb_32|clok2048MbodCounterTX[2]~DUPLICATE_q ),
	.datae(!\comb_32|clok2048MbodCounterTX[3]~DUPLICATE_q ),
	.dataf(!\comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|Add2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|Add2~0 .extended_lut = "off";
defparam \comb_32|Add2~0 .lut_mask = 64'h5555555555555556;
defparam \comb_32|Add2~0 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X53_Y23_N31
dffeas \comb_32|dataCounterTX[2]~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|dataCounterTX[2]~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounterTX[2]~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounterTX[2]~DUPLICATE .is_wysiwyg = "true";
defparam \comb_32|dataCounterTX[2]~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N42
cyclonev_lcell_comb \comb_32|clok2048MbodCounterTX[5]~1 (
// Equation(s):
// \comb_32|clok2048MbodCounterTX[5]~1_combout  = ( \comb_32|dataCounterTX [3] & ( !\comb_32|clok2048MbodCounterTX[5]~DUPLICATE_q  ) ) # ( !\comb_32|dataCounterTX [3] & ( !\comb_32|clok2048MbodCounterTX[5]~DUPLICATE_q  & ( (((!\ActionDataTransmitToUART~q ) # 
// (\comb_32|dataCounterTX[2]~DUPLICATE_q )) # (\comb_32|dataCounterTX[0]~DUPLICATE_q )) # (\comb_32|dataCounterTX[1]~DUPLICATE_q ) ) ) )

	.dataa(!\comb_32|dataCounterTX[1]~DUPLICATE_q ),
	.datab(!\comb_32|dataCounterTX[0]~DUPLICATE_q ),
	.datac(!\comb_32|dataCounterTX[2]~DUPLICATE_q ),
	.datad(!\ActionDataTransmitToUART~q ),
	.datae(!\comb_32|dataCounterTX [3]),
	.dataf(!\comb_32|clok2048MbodCounterTX[5]~DUPLICATE_q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterTX[5]~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[5]~1 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterTX[5]~1 .lut_mask = 64'hFF7FFFFF00000000;
defparam \comb_32|clok2048MbodCounterTX[5]~1 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N51
cyclonev_lcell_comb \comb_32|clok2048MbodCounterTX[5]~2 (
// Equation(s):
// \comb_32|clok2048MbodCounterTX[5]~2_combout  = ( \comb_32|Add2~0_combout  & ( \comb_32|clok2048MbodCounterTX[5]~1_combout  & ( (!\ActionDataTransmitToUART~q  & ((!\comb_32|always0~3_combout ) # ((\comb_32|always0~0_combout  & 
// !\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q )))) ) ) ) # ( \comb_32|Add2~0_combout  & ( !\comb_32|clok2048MbodCounterTX[5]~1_combout  & ( (!\comb_32|always0~0_combout ) # ((!\comb_32|always0~3_combout ) # 
// ((!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ) # (\ActionDataTransmitToUART~q ))) ) ) ) # ( !\comb_32|Add2~0_combout  & ( !\comb_32|clok2048MbodCounterTX[5]~1_combout  & ( ((!\comb_32|always0~0_combout  & \comb_32|always0~3_combout )) # 
// (\ActionDataTransmitToUART~q ) ) ) )

	.dataa(!\comb_32|always0~0_combout ),
	.datab(!\comb_32|always0~3_combout ),
	.datac(!\ActionDataTransmitToUART~q ),
	.datad(!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ),
	.datae(!\comb_32|Add2~0_combout ),
	.dataf(!\comb_32|clok2048MbodCounterTX[5]~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterTX[5]~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[5]~2 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterTX[5]~2 .lut_mask = 64'h2F2FFFEF0000D0C0;
defparam \comb_32|clok2048MbodCounterTX[5]~2 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N52
dffeas \comb_32|clok2048MbodCounterTX[5]~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterTX[5]~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterTX[5]~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[5]~DUPLICATE .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterTX[5]~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N54
cyclonev_lcell_comb \comb_32|always0~3 (
// Equation(s):
// \comb_32|always0~3_combout  = ( \comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q  & ( \comb_32|clok2048MbodCounterTX[5]~DUPLICATE_q  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(!\comb_32|clok2048MbodCounterTX[5]~DUPLICATE_q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(!\comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|always0~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|always0~3 .extended_lut = "off";
defparam \comb_32|always0~3 .lut_mask = 64'h000000000F0F0F0F;
defparam \comb_32|always0~3 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N49
dffeas \comb_32|clok2048MbodCounterTX[4] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterTX[4]~4_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterTX [4]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[4] .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterTX[4] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N3
cyclonev_lcell_comb \comb_32|Add2~1 (
// Equation(s):
// \comb_32|Add2~1_combout  = ( \comb_32|clok2048MbodCounterTX [1] & ( !\comb_32|clok2048MbodCounterTX [4] $ (((!\comb_32|clok2048MbodCounterTX[2]~DUPLICATE_q ) # ((!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ) # 
// (!\comb_32|clok2048MbodCounterTX[3]~DUPLICATE_q )))) ) ) # ( !\comb_32|clok2048MbodCounterTX [1] & ( \comb_32|clok2048MbodCounterTX [4] ) )

	.dataa(!\comb_32|clok2048MbodCounterTX[2]~DUPLICATE_q ),
	.datab(!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ),
	.datac(!\comb_32|clok2048MbodCounterTX [4]),
	.datad(!\comb_32|clok2048MbodCounterTX[3]~DUPLICATE_q ),
	.datae(gnd),
	.dataf(!\comb_32|clok2048MbodCounterTX [1]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|Add2~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|Add2~1 .extended_lut = "off";
defparam \comb_32|Add2~1 .lut_mask = 64'h0F0F0F0F0F1E0F1E;
defparam \comb_32|Add2~1 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N45
cyclonev_lcell_comb \comb_32|clok2048MbodCounterTX[4]~3 (
// Equation(s):
// \comb_32|clok2048MbodCounterTX[4]~3_combout  = ( \comb_32|dataCounterTX [3] & ( !\comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q  ) ) # ( !\comb_32|dataCounterTX [3] & ( !\comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q  & ( (((!\ActionDataTransmitToUART~q ) # 
// (\comb_32|dataCounterTX[2]~DUPLICATE_q )) # (\comb_32|dataCounterTX[0]~DUPLICATE_q )) # (\comb_32|dataCounterTX[1]~DUPLICATE_q ) ) ) )

	.dataa(!\comb_32|dataCounterTX[1]~DUPLICATE_q ),
	.datab(!\comb_32|dataCounterTX[0]~DUPLICATE_q ),
	.datac(!\ActionDataTransmitToUART~q ),
	.datad(!\comb_32|dataCounterTX[2]~DUPLICATE_q ),
	.datae(!\comb_32|dataCounterTX [3]),
	.dataf(!\comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterTX[4]~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[4]~3 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterTX[4]~3 .lut_mask = 64'hF7FFFFFF00000000;
defparam \comb_32|clok2048MbodCounterTX[4]~3 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N48
cyclonev_lcell_comb \comb_32|clok2048MbodCounterTX[4]~4 (
// Equation(s):
// \comb_32|clok2048MbodCounterTX[4]~4_combout  = ( \comb_32|Add2~1_combout  & ( \comb_32|clok2048MbodCounterTX[4]~3_combout  & ( (!\ActionDataTransmitToUART~q  & ((!\comb_32|always0~3_combout ) # ((\comb_32|always0~0_combout  & 
// !\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q )))) ) ) ) # ( \comb_32|Add2~1_combout  & ( !\comb_32|clok2048MbodCounterTX[4]~3_combout  & ( (!\comb_32|always0~0_combout ) # ((!\comb_32|always0~3_combout ) # 
// ((!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ) # (\ActionDataTransmitToUART~q ))) ) ) ) # ( !\comb_32|Add2~1_combout  & ( !\comb_32|clok2048MbodCounterTX[4]~3_combout  & ( ((!\comb_32|always0~0_combout  & \comb_32|always0~3_combout )) # 
// (\ActionDataTransmitToUART~q ) ) ) )

	.dataa(!\comb_32|always0~0_combout ),
	.datab(!\comb_32|always0~3_combout ),
	.datac(!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ),
	.datad(!\ActionDataTransmitToUART~q ),
	.datae(!\comb_32|Add2~1_combout ),
	.dataf(!\comb_32|clok2048MbodCounterTX[4]~3_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterTX[4]~4_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[4]~4 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterTX[4]~4 .lut_mask = 64'h22FFFEFF0000DC00;
defparam \comb_32|clok2048MbodCounterTX[4]~4 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N50
dffeas \comb_32|clok2048MbodCounterTX[4]~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterTX[4]~4_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[4]~DUPLICATE .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterTX[4]~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: FF_X52_Y23_N53
dffeas \comb_32|clok2048MbodCounterTX[5] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterTX[5]~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterTX [5]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[5] .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterTX[5] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N24
cyclonev_lcell_comb \comb_32|always0~1 (
// Equation(s):
// \comb_32|always0~1_combout  = ( \comb_32|clok2048MbodCounterTX [5] & ( (!\ActionDataTransmitToUART~DUPLICATE_q  & (\comb_32|clok2048MbodCounterTX [0] & \comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q )) ) )

	.dataa(!\ActionDataTransmitToUART~DUPLICATE_q ),
	.datab(!\comb_32|clok2048MbodCounterTX [0]),
	.datac(!\comb_32|clok2048MbodCounterTX[4]~DUPLICATE_q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(!\comb_32|clok2048MbodCounterTX [5]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|always0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|always0~1 .extended_lut = "off";
defparam \comb_32|always0~1 .lut_mask = 64'h0000000002020202;
defparam \comb_32|always0~1 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N36
cyclonev_lcell_comb \comb_32|dataCounterTX~4 (
// Equation(s):
// \comb_32|dataCounterTX~4_combout  = ( !\comb_32|dataCounterTX [3] & ( (!\comb_32|dataCounterTX[1]~DUPLICATE_q  & (!\comb_32|dataCounterTX[0]~DUPLICATE_q  & (\ActionDataTransmitToUART~q  & (!\comb_32|dataCounterTX [2])))) ) ) # ( \comb_32|dataCounterTX [3] 
// & ( (((!\comb_32|always0~0_combout ) # ((!\comb_32|always0~1_combout ) # (\comb_32|dataCounterTX [2]))) # (\comb_32|dataCounterTX[0]~DUPLICATE_q )) # (\comb_32|dataCounterTX[1]~DUPLICATE_q ) ) )

	.dataa(!\comb_32|dataCounterTX[1]~DUPLICATE_q ),
	.datab(!\comb_32|dataCounterTX[0]~DUPLICATE_q ),
	.datac(!\comb_32|always0~0_combout ),
	.datad(!\comb_32|dataCounterTX [2]),
	.datae(!\comb_32|dataCounterTX [3]),
	.dataf(!\comb_32|always0~1_combout ),
	.datag(!\ActionDataTransmitToUART~q ),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|dataCounterTX~4_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|dataCounterTX~4 .extended_lut = "on";
defparam \comb_32|dataCounterTX~4 .lut_mask = 64'h0800FFFF0800F7FF;
defparam \comb_32|dataCounterTX~4 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N32
dffeas \comb_32|dataCounterTX[3] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataCounterTX~4_combout ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounterTX [3]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounterTX[3] .is_wysiwyg = "true";
defparam \comb_32|dataCounterTX[3] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N30
cyclonev_lcell_comb \comb_32|dataCounterTX[2]~0 (
// Equation(s):
// \comb_32|dataCounterTX[2]~0_combout  = ( \comb_32|dataCounterTX [2] & ( \comb_32|dataCounterTX[0]~DUPLICATE_q  ) ) # ( \comb_32|dataCounterTX [2] & ( !\comb_32|dataCounterTX[0]~DUPLICATE_q  & ( (!\comb_32|always0~0_combout ) # 
// (((!\comb_32|always0~1_combout ) # (\comb_32|dataCounterTX[1]~DUPLICATE_q )) # (\comb_32|dataCounterTX [3])) ) ) ) # ( !\comb_32|dataCounterTX [2] & ( !\comb_32|dataCounterTX[0]~DUPLICATE_q  & ( (\comb_32|always0~0_combout  & (\comb_32|dataCounterTX [3] & 
// (!\comb_32|dataCounterTX[1]~DUPLICATE_q  & \comb_32|always0~1_combout ))) ) ) )

	.dataa(!\comb_32|always0~0_combout ),
	.datab(!\comb_32|dataCounterTX [3]),
	.datac(!\comb_32|dataCounterTX[1]~DUPLICATE_q ),
	.datad(!\comb_32|always0~1_combout ),
	.datae(!\comb_32|dataCounterTX [2]),
	.dataf(!\comb_32|dataCounterTX[0]~DUPLICATE_q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|dataCounterTX[2]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|dataCounterTX[2]~0 .extended_lut = "off";
defparam \comb_32|dataCounterTX[2]~0 .lut_mask = 64'h0010FFBF0000FFFF;
defparam \comb_32|dataCounterTX[2]~0 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X53_Y23_N32
dffeas \comb_32|dataCounterTX[2] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|dataCounterTX[2]~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounterTX [2]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounterTX[2] .is_wysiwyg = "true";
defparam \comb_32|dataCounterTX[2] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N30
cyclonev_lcell_comb \comb_32|always0~2 (
// Equation(s):
// \comb_32|always0~2_combout  = ( \ActionDataTransmitToUART~DUPLICATE_q  & ( (!\comb_32|dataCounterTX [1] & (!\comb_32|dataCounterTX [0] & (!\comb_32|dataCounterTX [2] & !\comb_32|dataCounterTX [3]))) ) )

	.dataa(!\comb_32|dataCounterTX [1]),
	.datab(!\comb_32|dataCounterTX [0]),
	.datac(!\comb_32|dataCounterTX [2]),
	.datad(!\comb_32|dataCounterTX [3]),
	.datae(gnd),
	.dataf(!\ActionDataTransmitToUART~DUPLICATE_q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|always0~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|always0~2 .extended_lut = "off";
defparam \comb_32|always0~2 .lut_mask = 64'h0000000080008000;
defparam \comb_32|always0~2 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N15
cyclonev_lcell_comb \comb_32|clok2048MbodCounterTX[0]~0 (
// Equation(s):
// \comb_32|clok2048MbodCounterTX[0]~0_combout  = ( \comb_32|always0~0_combout  & ( (!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q  & ((!\ActionDataTransmitToUART~q ) # (\comb_32|always0~2_combout ))) # (\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q  & 
// ((\ActionDataTransmitToUART~q ))) ) ) # ( !\comb_32|always0~0_combout  & ( (!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q  & (((!\comb_32|always0~3_combout  & !\ActionDataTransmitToUART~q )) # (\comb_32|always0~2_combout ))) # 
// (\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q  & (((\ActionDataTransmitToUART~q ) # (\comb_32|always0~3_combout )))) ) )

	.dataa(!\comb_32|clok2048MbodCounterTX[0]~DUPLICATE_q ),
	.datab(!\comb_32|always0~2_combout ),
	.datac(!\comb_32|always0~3_combout ),
	.datad(!\ActionDataTransmitToUART~q ),
	.datae(gnd),
	.dataf(!\comb_32|always0~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterTX[0]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[0]~0 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterTX[0]~0 .lut_mask = 64'hA777A777AA77AA77;
defparam \comb_32|clok2048MbodCounterTX[0]~0 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N17
dffeas \comb_32|clok2048MbodCounterTX[0] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|clok2048MbodCounterTX[0]~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterTX [0]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[0] .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterTX[0] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N27
cyclonev_lcell_comb \comb_32|clok2048MbodCounterTX[1]~5 (
// Equation(s):
// \comb_32|clok2048MbodCounterTX[1]~5_combout  = ( \comb_32|always0~2_combout  & ( (!\ActionDataTransmitToUART~DUPLICATE_q  & (!\comb_32|always0~3_combout  & (!\comb_32|clok2048MbodCounterTX [0] $ (!\comb_32|clok2048MbodCounterTX[1]~DUPLICATE_q )))) ) ) # ( 
// !\comb_32|always0~2_combout  & ( !\comb_32|clok2048MbodCounterTX[1]~DUPLICATE_q  $ ((((!\comb_32|clok2048MbodCounterTX [0]) # (\comb_32|always0~3_combout )) # (\ActionDataTransmitToUART~DUPLICATE_q ))) ) )

	.dataa(!\ActionDataTransmitToUART~DUPLICATE_q ),
	.datab(!\comb_32|clok2048MbodCounterTX [0]),
	.datac(!\comb_32|clok2048MbodCounterTX[1]~DUPLICATE_q ),
	.datad(!\comb_32|always0~3_combout ),
	.datae(gnd),
	.dataf(!\comb_32|always0~2_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|clok2048MbodCounterTX[1]~5_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[1]~5 .extended_lut = "off";
defparam \comb_32|clok2048MbodCounterTX[1]~5 .lut_mask = 64'h2D0F2D0F28002800;
defparam \comb_32|clok2048MbodCounterTX[1]~5 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N41
dffeas \comb_32|clok2048MbodCounterTX[1]~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|clok2048MbodCounterTX[1]~5_combout ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|clok2048MbodCounterTX[1]~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|clok2048MbodCounterTX[1]~DUPLICATE .is_wysiwyg = "true";
defparam \comb_32|clok2048MbodCounterTX[1]~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N18
cyclonev_lcell_comb \comb_32|always0~0 (
// Equation(s):
// \comb_32|always0~0_combout  = ( !\comb_32|clok2048MbodCounterTX [3] & ( (!\comb_32|clok2048MbodCounterTX[1]~DUPLICATE_q  & !\comb_32|clok2048MbodCounterTX [2]) ) )

	.dataa(gnd),
	.datab(!\comb_32|clok2048MbodCounterTX[1]~DUPLICATE_q ),
	.datac(!\comb_32|clok2048MbodCounterTX [2]),
	.datad(gnd),
	.datae(gnd),
	.dataf(!\comb_32|clok2048MbodCounterTX [3]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|always0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|always0~0 .extended_lut = "off";
defparam \comb_32|always0~0 .lut_mask = 64'hC0C0C0C000000000;
defparam \comb_32|always0~0 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N36
cyclonev_lcell_comb \comb_32|dataCounterTX~2 (
// Equation(s):
// \comb_32|dataCounterTX~2_combout  = ( \comb_32|dataCounterTX [1] & ( \comb_32|always0~1_combout  & ( ((!\comb_32|always0~0_combout ) # (\comb_32|dataCounterTX [0])) # (\comb_32|dataCounterTX~1_combout ) ) ) ) # ( !\comb_32|dataCounterTX [1] & ( 
// \comb_32|always0~1_combout  & ( !\comb_32|always0~2_combout  $ ((((!\comb_32|always0~0_combout ) # (\comb_32|dataCounterTX [0])) # (\comb_32|dataCounterTX~1_combout ))) ) ) ) # ( \comb_32|dataCounterTX [1] & ( !\comb_32|always0~1_combout  ) ) # ( 
// !\comb_32|dataCounterTX [1] & ( !\comb_32|always0~1_combout  & ( \comb_32|always0~2_combout  ) ) )

	.dataa(!\comb_32|dataCounterTX~1_combout ),
	.datab(!\comb_32|dataCounterTX [0]),
	.datac(!\comb_32|always0~0_combout ),
	.datad(!\comb_32|always0~2_combout ),
	.datae(!\comb_32|dataCounterTX [1]),
	.dataf(!\comb_32|always0~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|dataCounterTX~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|dataCounterTX~2 .extended_lut = "off";
defparam \comb_32|dataCounterTX~2 .lut_mask = 64'h00FFFFFF08F7F7F7;
defparam \comb_32|dataCounterTX~2 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N37
dffeas \comb_32|dataCounterTX[1]~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|dataCounterTX~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounterTX[1]~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounterTX[1]~DUPLICATE .is_wysiwyg = "true";
defparam \comb_32|dataCounterTX[1]~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N15
cyclonev_lcell_comb \comb_32|dataCounterTX~1 (
// Equation(s):
// \comb_32|dataCounterTX~1_combout  = ( \comb_32|dataCounterTX [0] & ( (\comb_32|dataCounterTX [3] & ((\comb_32|dataCounterTX [2]) # (\comb_32|dataCounterTX[1]~DUPLICATE_q ))) ) ) # ( !\comb_32|dataCounterTX [0] & ( (!\comb_32|dataCounterTX [3] & 
// (!\comb_32|dataCounterTX[1]~DUPLICATE_q  & !\comb_32|dataCounterTX [2])) # (\comb_32|dataCounterTX [3] & ((\comb_32|dataCounterTX [2]))) ) )

	.dataa(!\comb_32|dataCounterTX[1]~DUPLICATE_q ),
	.datab(!\comb_32|dataCounterTX [3]),
	.datac(!\comb_32|dataCounterTX [2]),
	.datad(gnd),
	.datae(gnd),
	.dataf(!\comb_32|dataCounterTX [0]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|dataCounterTX~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|dataCounterTX~1 .extended_lut = "off";
defparam \comb_32|dataCounterTX~1 .lut_mask = 64'h8383838313131313;
defparam \comb_32|dataCounterTX~1 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N18
cyclonev_lcell_comb \comb_32|dataCounterTX[0]~3 (
// Equation(s):
// \comb_32|dataCounterTX[0]~3_combout  = ( \comb_32|always0~1_combout  & ( !\comb_32|dataCounterTX [0] $ (((!\comb_32|always0~0_combout ) # (\comb_32|dataCounterTX~1_combout ))) ) ) # ( !\comb_32|always0~1_combout  & ( \comb_32|dataCounterTX [0] ) )

	.dataa(!\comb_32|dataCounterTX [0]),
	.datab(gnd),
	.datac(!\comb_32|dataCounterTX~1_combout ),
	.datad(!\comb_32|always0~0_combout ),
	.datae(gnd),
	.dataf(!\comb_32|always0~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|dataCounterTX[0]~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|dataCounterTX[0]~3 .extended_lut = "off";
defparam \comb_32|dataCounterTX[0]~3 .lut_mask = 64'h5555555555A555A5;
defparam \comb_32|dataCounterTX[0]~3 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X53_Y23_N20
dffeas \comb_32|dataCounterTX[0] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|dataCounterTX[0]~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataCounterTX [0]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataCounterTX[0] .is_wysiwyg = "true";
defparam \comb_32|dataCounterTX[0] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N21
cyclonev_lcell_comb \comb_32|always0~5 (
// Equation(s):
// \comb_32|always0~5_combout  = ( \comb_32|dataCounterTX [3] & ( (!\comb_32|dataCounterTX [2] & !\comb_32|dataCounterTX [1]) ) ) # ( !\comb_32|dataCounterTX [3] & ( (\comb_32|dataCounterTX [1]) # (\comb_32|dataCounterTX [2]) ) )

	.dataa(!\comb_32|dataCounterTX [2]),
	.datab(gnd),
	.datac(!\comb_32|dataCounterTX [1]),
	.datad(gnd),
	.datae(gnd),
	.dataf(!\comb_32|dataCounterTX [3]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|always0~5_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|always0~5 .extended_lut = "off";
defparam \comb_32|always0~5 .lut_mask = 64'h5F5F5F5FA0A0A0A0;
defparam \comb_32|always0~5 .shared_arith = "off";
// synopsys translate_on

// Location: MLABCELL_X49_Y20_N3
cyclonev_lcell_comb \comb_32|always0~7 (
// Equation(s):
// \comb_32|always0~7_combout  = ( !\comb_32|dataCounter [2] & ( \comb_32|dataCounter [3] ) ) # ( \comb_32|dataCounter [2] & ( !\comb_32|dataCounter [3] ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(!\comb_32|dataCounter [2]),
	.dataf(!\comb_32|dataCounter [3]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|always0~7_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|always0~7 .extended_lut = "off";
defparam \comb_32|always0~7 .lut_mask = 64'h0000FFFFFFFF0000;
defparam \comb_32|always0~7 .shared_arith = "off";
// synopsys translate_on

// Location: MLABCELL_X49_Y20_N42
cyclonev_lcell_comb \comb_32|dataIN[0]~0 (
// Equation(s):
// \comb_32|dataIN[0]~0_combout  = ( !\comb_32|Equal2~0_combout  & ( \comb_32|always0~6_combout  & ( \comb_32|always0~7_combout  ) ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(!\comb_32|always0~7_combout ),
	.datad(gnd),
	.datae(!\comb_32|Equal2~0_combout ),
	.dataf(!\comb_32|always0~6_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|dataIN[0]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|dataIN[0]~0 .extended_lut = "off";
defparam \comb_32|dataIN[0]~0 .lut_mask = 64'h000000000F0F0000;
defparam \comb_32|dataIN[0]~0 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X49_Y20_N47
dffeas \comb_32|dataIN[7] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\PinRX~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|dataIN[0]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataIN [7]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataIN[7] .is_wysiwyg = "true";
defparam \comb_32|dataIN[7] .power_up = "low";
// synopsys translate_on

// Location: FF_X49_Y20_N28
dffeas \comb_32|dataIN[6] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [7]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|dataIN[0]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataIN [6]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataIN[6] .is_wysiwyg = "true";
defparam \comb_32|dataIN[6] .power_up = "low";
// synopsys translate_on

// Location: FF_X49_Y20_N53
dffeas \comb_32|dataIN[5] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [6]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|dataIN[0]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataIN [5]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataIN[5] .is_wysiwyg = "true";
defparam \comb_32|dataIN[5] .power_up = "low";
// synopsys translate_on

// Location: FF_X49_Y20_N44
dffeas \comb_32|dataIN[4] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [5]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|dataIN[0]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataIN [4]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataIN[4] .is_wysiwyg = "true";
defparam \comb_32|dataIN[4] .power_up = "low";
// synopsys translate_on

// Location: FF_X49_Y20_N26
dffeas \comb_32|dataIN[3] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [4]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|dataIN[0]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataIN [3]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataIN[3] .is_wysiwyg = "true";
defparam \comb_32|dataIN[3] .power_up = "low";
// synopsys translate_on

// Location: FF_X49_Y20_N34
dffeas \comb_32|dataIN[2] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [3]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|dataIN[0]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataIN [2]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataIN[2] .is_wysiwyg = "true";
defparam \comb_32|dataIN[2] .power_up = "low";
// synopsys translate_on

// Location: FF_X49_Y20_N50
dffeas \comb_32|dataIN[1] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [2]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|dataIN[0]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataIN [1]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataIN[1] .is_wysiwyg = "true";
defparam \comb_32|dataIN[1] .power_up = "low";
// synopsys translate_on

// Location: FF_X49_Y20_N23
dffeas \comb_32|dataIN[0] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [1]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|dataIN[0]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataIN [0]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataIN[0] .is_wysiwyg = "true";
defparam \comb_32|dataIN[0] .power_up = "low";
// synopsys translate_on

// Location: FF_X52_Y23_N26
dffeas \DataBusToUART[0] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [0]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|flagOUT_DataResive~q ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(DataBusToUART[0]),
	.prn(vcc));
// synopsys translate_off
defparam \DataBusToUART[0] .is_wysiwyg = "true";
defparam \DataBusToUART[0] .power_up = "low";
// synopsys translate_on

// Location: FF_X49_Y20_N49
dffeas \comb_32|dataIN[1]~DUPLICATE (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [2]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|dataIN[0]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|dataIN[1]~DUPLICATE_q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|dataIN[1]~DUPLICATE .is_wysiwyg = "true";
defparam \comb_32|dataIN[1]~DUPLICATE .power_up = "low";
// synopsys translate_on

// Location: FF_X50_Y20_N37
dffeas \DataBusToUART[1] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN[1]~DUPLICATE_q ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|flagOUT_DataResive~q ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(DataBusToUART[1]),
	.prn(vcc));
// synopsys translate_off
defparam \DataBusToUART[1] .is_wysiwyg = "true";
defparam \DataBusToUART[1] .power_up = "low";
// synopsys translate_on

// Location: FF_X49_Y20_N7
dffeas \DataBusToUART[3] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [3]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|flagOUT_DataResive~q ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(DataBusToUART[3]),
	.prn(vcc));
// synopsys translate_off
defparam \DataBusToUART[3] .is_wysiwyg = "true";
defparam \DataBusToUART[3] .power_up = "low";
// synopsys translate_on

// Location: FF_X49_Y20_N1
dffeas \DataBusToUART[5] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [5]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|flagOUT_DataResive~q ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(DataBusToUART[5]),
	.prn(vcc));
// synopsys translate_off
defparam \DataBusToUART[5] .is_wysiwyg = "true";
defparam \DataBusToUART[5] .power_up = "low";
// synopsys translate_on

// Location: FF_X50_Y20_N46
dffeas \DataBusToUART[7] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [7]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|flagOUT_DataResive~q ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(DataBusToUART[7]),
	.prn(vcc));
// synopsys translate_off
defparam \DataBusToUART[7] .is_wysiwyg = "true";
defparam \DataBusToUART[7] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N6
cyclonev_lcell_comb \comb_32|shiftRegTX~8 (
// Equation(s):
// \comb_32|shiftRegTX~8_combout  = ( \comb_32|shiftRegTX [7] & ( \comb_32|always0~2_combout  & ( (DataBusToUART[7] & ((!\comb_32|always0~0_combout ) # ((!\comb_32|always0~5_combout ) # (!\comb_32|always0~1_combout )))) ) ) ) # ( !\comb_32|shiftRegTX [7] & ( 
// \comb_32|always0~2_combout  & ( (DataBusToUART[7] & ((!\comb_32|always0~0_combout ) # ((!\comb_32|always0~5_combout ) # (!\comb_32|always0~1_combout )))) ) ) ) # ( \comb_32|shiftRegTX [7] & ( !\comb_32|always0~2_combout  & ( (!\comb_32|always0~0_combout ) 
// # ((!\comb_32|always0~5_combout ) # (!\comb_32|always0~1_combout )) ) ) )

	.dataa(!\comb_32|always0~0_combout ),
	.datab(!DataBusToUART[7]),
	.datac(!\comb_32|always0~5_combout ),
	.datad(!\comb_32|always0~1_combout ),
	.datae(!\comb_32|shiftRegTX [7]),
	.dataf(!\comb_32|always0~2_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|shiftRegTX~8_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|shiftRegTX~8 .extended_lut = "off";
defparam \comb_32|shiftRegTX~8 .lut_mask = 64'h0000FFFA33323332;
defparam \comb_32|shiftRegTX~8 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X53_Y23_N7
dffeas \comb_32|shiftRegTX[7] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|shiftRegTX~8_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|shiftRegTX [7]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|shiftRegTX[7] .is_wysiwyg = "true";
defparam \comb_32|shiftRegTX[7] .power_up = "low";
// synopsys translate_on

// Location: FF_X52_Y23_N19
dffeas \DataBusToUART[6] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [6]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|flagOUT_DataResive~q ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(DataBusToUART[6]),
	.prn(vcc));
// synopsys translate_off
defparam \DataBusToUART[6] .is_wysiwyg = "true";
defparam \DataBusToUART[6] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N45
cyclonev_lcell_comb \comb_32|shiftRegTX~7 (
// Equation(s):
// \comb_32|shiftRegTX~7_combout  = ( \comb_32|always0~1_combout  & ( (!\comb_32|always0~0_combout  & (((DataBusToUART[6])))) # (\comb_32|always0~0_combout  & ((!\comb_32|always0~5_combout  & ((DataBusToUART[6]))) # (\comb_32|always0~5_combout  & 
// (\comb_32|shiftRegTX [7])))) ) ) # ( !\comb_32|always0~1_combout  & ( DataBusToUART[6] ) )

	.dataa(!\comb_32|always0~0_combout ),
	.datab(!\comb_32|always0~5_combout ),
	.datac(!\comb_32|shiftRegTX [7]),
	.datad(!DataBusToUART[6]),
	.datae(gnd),
	.dataf(!\comb_32|always0~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|shiftRegTX~7_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|shiftRegTX~7 .extended_lut = "off";
defparam \comb_32|shiftRegTX~7 .lut_mask = 64'h00FF00FF01EF01EF;
defparam \comb_32|shiftRegTX~7 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N57
cyclonev_lcell_comb \comb_32|shiftRegTX[0]~1 (
// Equation(s):
// \comb_32|shiftRegTX[0]~1_combout  = ( \comb_32|always0~0_combout  & ( ((\comb_32|always0~5_combout  & \comb_32|always0~1_combout )) # (\comb_32|always0~2_combout ) ) ) # ( !\comb_32|always0~0_combout  & ( \comb_32|always0~2_combout  ) )

	.dataa(!\comb_32|always0~5_combout ),
	.datab(gnd),
	.datac(!\comb_32|always0~2_combout ),
	.datad(!\comb_32|always0~1_combout ),
	.datae(gnd),
	.dataf(!\comb_32|always0~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|shiftRegTX[0]~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|shiftRegTX[0]~1 .extended_lut = "off";
defparam \comb_32|shiftRegTX[0]~1 .lut_mask = 64'h0F0F0F0F0F5F0F5F;
defparam \comb_32|shiftRegTX[0]~1 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N47
dffeas \comb_32|shiftRegTX[6] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|shiftRegTX~7_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\comb_32|shiftRegTX[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|shiftRegTX [6]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|shiftRegTX[6] .is_wysiwyg = "true";
defparam \comb_32|shiftRegTX[6] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N42
cyclonev_lcell_comb \comb_32|shiftRegTX~6 (
// Equation(s):
// \comb_32|shiftRegTX~6_combout  = ( \comb_32|always0~1_combout  & ( (!\comb_32|always0~0_combout  & (((DataBusToUART[5])))) # (\comb_32|always0~0_combout  & ((!\comb_32|always0~5_combout  & (DataBusToUART[5])) # (\comb_32|always0~5_combout  & 
// ((\comb_32|shiftRegTX [6]))))) ) ) # ( !\comb_32|always0~1_combout  & ( DataBusToUART[5] ) )

	.dataa(!\comb_32|always0~0_combout ),
	.datab(!\comb_32|always0~5_combout ),
	.datac(!DataBusToUART[5]),
	.datad(!\comb_32|shiftRegTX [6]),
	.datae(gnd),
	.dataf(!\comb_32|always0~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|shiftRegTX~6_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|shiftRegTX~6 .extended_lut = "off";
defparam \comb_32|shiftRegTX~6 .lut_mask = 64'h0F0F0F0F0E1F0E1F;
defparam \comb_32|shiftRegTX~6 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N44
dffeas \comb_32|shiftRegTX[5] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|shiftRegTX~6_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\comb_32|shiftRegTX[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|shiftRegTX [5]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|shiftRegTX[5] .is_wysiwyg = "true";
defparam \comb_32|shiftRegTX[5] .power_up = "low";
// synopsys translate_on

// Location: FF_X50_Y20_N23
dffeas \DataBusToUART[4] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [4]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|flagOUT_DataResive~q ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(DataBusToUART[4]),
	.prn(vcc));
// synopsys translate_off
defparam \DataBusToUART[4] .is_wysiwyg = "true";
defparam \DataBusToUART[4] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N9
cyclonev_lcell_comb \comb_32|shiftRegTX~5 (
// Equation(s):
// \comb_32|shiftRegTX~5_combout  = ( \comb_32|always0~1_combout  & ( (!\comb_32|always0~0_combout  & (((DataBusToUART[4])))) # (\comb_32|always0~0_combout  & ((!\comb_32|always0~5_combout  & ((DataBusToUART[4]))) # (\comb_32|always0~5_combout  & 
// (\comb_32|shiftRegTX [5])))) ) ) # ( !\comb_32|always0~1_combout  & ( DataBusToUART[4] ) )

	.dataa(!\comb_32|always0~0_combout ),
	.datab(!\comb_32|always0~5_combout ),
	.datac(!\comb_32|shiftRegTX [5]),
	.datad(!DataBusToUART[4]),
	.datae(gnd),
	.dataf(!\comb_32|always0~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|shiftRegTX~5_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|shiftRegTX~5 .extended_lut = "off";
defparam \comb_32|shiftRegTX~5 .lut_mask = 64'h00FF00FF01EF01EF;
defparam \comb_32|shiftRegTX~5 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N10
dffeas \comb_32|shiftRegTX[4] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|shiftRegTX~5_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\comb_32|shiftRegTX[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|shiftRegTX [4]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|shiftRegTX[4] .is_wysiwyg = "true";
defparam \comb_32|shiftRegTX[4] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N6
cyclonev_lcell_comb \comb_32|shiftRegTX~4 (
// Equation(s):
// \comb_32|shiftRegTX~4_combout  = ( \comb_32|always0~1_combout  & ( (!\comb_32|always0~0_combout  & (((DataBusToUART[3])))) # (\comb_32|always0~0_combout  & ((!\comb_32|always0~5_combout  & (DataBusToUART[3])) # (\comb_32|always0~5_combout  & 
// ((\comb_32|shiftRegTX [4]))))) ) ) # ( !\comb_32|always0~1_combout  & ( DataBusToUART[3] ) )

	.dataa(!\comb_32|always0~0_combout ),
	.datab(!\comb_32|always0~5_combout ),
	.datac(!DataBusToUART[3]),
	.datad(!\comb_32|shiftRegTX [4]),
	.datae(gnd),
	.dataf(!\comb_32|always0~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|shiftRegTX~4_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|shiftRegTX~4 .extended_lut = "off";
defparam \comb_32|shiftRegTX~4 .lut_mask = 64'h0F0F0F0F0E1F0E1F;
defparam \comb_32|shiftRegTX~4 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N8
dffeas \comb_32|shiftRegTX[3] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|shiftRegTX~4_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\comb_32|shiftRegTX[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|shiftRegTX [3]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|shiftRegTX[3] .is_wysiwyg = "true";
defparam \comb_32|shiftRegTX[3] .power_up = "low";
// synopsys translate_on

// Location: FF_X52_Y23_N23
dffeas \DataBusToUART[2] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\comb_32|dataIN [2]),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\comb_32|flagOUT_DataResive~q ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(DataBusToUART[2]),
	.prn(vcc));
// synopsys translate_off
defparam \DataBusToUART[2] .is_wysiwyg = "true";
defparam \DataBusToUART[2] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N3
cyclonev_lcell_comb \comb_32|shiftRegTX~3 (
// Equation(s):
// \comb_32|shiftRegTX~3_combout  = ( \comb_32|always0~1_combout  & ( (!\comb_32|always0~0_combout  & (((DataBusToUART[2])))) # (\comb_32|always0~0_combout  & ((!\comb_32|always0~5_combout  & ((DataBusToUART[2]))) # (\comb_32|always0~5_combout  & 
// (\comb_32|shiftRegTX [3])))) ) ) # ( !\comb_32|always0~1_combout  & ( DataBusToUART[2] ) )

	.dataa(!\comb_32|always0~0_combout ),
	.datab(!\comb_32|always0~5_combout ),
	.datac(!\comb_32|shiftRegTX [3]),
	.datad(!DataBusToUART[2]),
	.datae(gnd),
	.dataf(!\comb_32|always0~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|shiftRegTX~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|shiftRegTX~3 .extended_lut = "off";
defparam \comb_32|shiftRegTX~3 .lut_mask = 64'h00FF00FF01EF01EF;
defparam \comb_32|shiftRegTX~3 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N5
dffeas \comb_32|shiftRegTX[2] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|shiftRegTX~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\comb_32|shiftRegTX[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|shiftRegTX [2]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|shiftRegTX[2] .is_wysiwyg = "true";
defparam \comb_32|shiftRegTX[2] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N54
cyclonev_lcell_comb \comb_32|shiftRegTX~2 (
// Equation(s):
// \comb_32|shiftRegTX~2_combout  = ( \comb_32|always0~1_combout  & ( (!\comb_32|always0~5_combout  & (((DataBusToUART[1])))) # (\comb_32|always0~5_combout  & ((!\comb_32|always0~0_combout  & (DataBusToUART[1])) # (\comb_32|always0~0_combout  & 
// ((\comb_32|shiftRegTX [2]))))) ) ) # ( !\comb_32|always0~1_combout  & ( DataBusToUART[1] ) )

	.dataa(!\comb_32|always0~5_combout ),
	.datab(!\comb_32|always0~0_combout ),
	.datac(!DataBusToUART[1]),
	.datad(!\comb_32|shiftRegTX [2]),
	.datae(gnd),
	.dataf(!\comb_32|always0~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|shiftRegTX~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|shiftRegTX~2 .extended_lut = "off";
defparam \comb_32|shiftRegTX~2 .lut_mask = 64'h0F0F0F0F0E1F0E1F;
defparam \comb_32|shiftRegTX~2 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N56
dffeas \comb_32|shiftRegTX[1] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|shiftRegTX~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\comb_32|shiftRegTX[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|shiftRegTX [1]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|shiftRegTX[1] .is_wysiwyg = "true";
defparam \comb_32|shiftRegTX[1] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X52_Y23_N0
cyclonev_lcell_comb \comb_32|shiftRegTX~0 (
// Equation(s):
// \comb_32|shiftRegTX~0_combout  = ( \comb_32|always0~1_combout  & ( (!\comb_32|always0~0_combout  & (((DataBusToUART[0])))) # (\comb_32|always0~0_combout  & ((!\comb_32|always0~5_combout  & (DataBusToUART[0])) # (\comb_32|always0~5_combout  & 
// ((\comb_32|shiftRegTX [1]))))) ) ) # ( !\comb_32|always0~1_combout  & ( DataBusToUART[0] ) )

	.dataa(!\comb_32|always0~0_combout ),
	.datab(!\comb_32|always0~5_combout ),
	.datac(!DataBusToUART[0]),
	.datad(!\comb_32|shiftRegTX [1]),
	.datae(gnd),
	.dataf(!\comb_32|always0~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|shiftRegTX~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|shiftRegTX~0 .extended_lut = "off";
defparam \comb_32|shiftRegTX~0 .lut_mask = 64'h0F0F0F0F0E1F0E1F;
defparam \comb_32|shiftRegTX~0 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X52_Y23_N1
dffeas \comb_32|shiftRegTX[0] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|shiftRegTX~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\comb_32|shiftRegTX[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|shiftRegTX [0]),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|shiftRegTX[0] .is_wysiwyg = "true";
defparam \comb_32|shiftRegTX[0] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N21
cyclonev_lcell_comb \comb_32|PinTX~1 (
// Equation(s):
// \comb_32|PinTX~1_combout  = ( \comb_32|dataCounterTX [2] & ( (\comb_32|shiftRegTX [0] & !\comb_32|dataCounterTX [3]) ) ) # ( !\comb_32|dataCounterTX [2] & ( (!\comb_32|dataCounterTX[1]~DUPLICATE_q  & ((!\comb_32|dataCounterTX [3] & (\comb_32|dataCounterTX 
// [0])) # (\comb_32|dataCounterTX [3] & ((\comb_32|shiftRegTX [0]))))) # (\comb_32|dataCounterTX[1]~DUPLICATE_q  & (((\comb_32|shiftRegTX [0] & !\comb_32|dataCounterTX [3])))) ) )

	.dataa(!\comb_32|dataCounterTX [0]),
	.datab(!\comb_32|shiftRegTX [0]),
	.datac(!\comb_32|dataCounterTX[1]~DUPLICATE_q ),
	.datad(!\comb_32|dataCounterTX [3]),
	.datae(gnd),
	.dataf(!\comb_32|dataCounterTX [2]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|PinTX~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|PinTX~1 .extended_lut = "off";
defparam \comb_32|PinTX~1 .lut_mask = 64'h5330533033003300;
defparam \comb_32|PinTX~1 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N12
cyclonev_lcell_comb \comb_32|PinTX~0 (
// Equation(s):
// \comb_32|PinTX~0_combout  = ( \comb_32|dataCounterTX [2] & ( \comb_32|dataCounterTX [3] ) ) # ( !\comb_32|dataCounterTX [2] & ( (!\comb_32|dataCounterTX[1]~DUPLICATE_q  & ((!\comb_32|dataCounterTX [3]))) # (\comb_32|dataCounterTX[1]~DUPLICATE_q  & 
// (\comb_32|dataCounterTX [0] & \comb_32|dataCounterTX [3])) ) )

	.dataa(!\comb_32|dataCounterTX[1]~DUPLICATE_q ),
	.datab(gnd),
	.datac(!\comb_32|dataCounterTX [0]),
	.datad(!\comb_32|dataCounterTX [3]),
	.datae(gnd),
	.dataf(!\comb_32|dataCounterTX [2]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|PinTX~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|PinTX~0 .extended_lut = "off";
defparam \comb_32|PinTX~0 .lut_mask = 64'hAA05AA0500FF00FF;
defparam \comb_32|PinTX~0 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X53_Y23_N57
cyclonev_lcell_comb \comb_32|PinTX~2 (
// Equation(s):
// \comb_32|PinTX~2_combout  = ( \comb_32|PinTX~0_combout  & ( (\comb_32|PinTX~q  & ((!\comb_32|PinTX~1_combout ) # ((!\comb_32|always0~1_combout ) # (!\comb_32|always0~0_combout )))) ) ) # ( !\comb_32|PinTX~0_combout  & ( (!\comb_32|always0~1_combout  & 
// (((\comb_32|PinTX~q )))) # (\comb_32|always0~1_combout  & ((!\comb_32|always0~0_combout  & ((\comb_32|PinTX~q ))) # (\comb_32|always0~0_combout  & (!\comb_32|PinTX~1_combout )))) ) )

	.dataa(!\comb_32|PinTX~1_combout ),
	.datab(!\comb_32|always0~1_combout ),
	.datac(!\comb_32|always0~0_combout ),
	.datad(!\comb_32|PinTX~q ),
	.datae(gnd),
	.dataf(!\comb_32|PinTX~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_32|PinTX~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_32|PinTX~2 .extended_lut = "off";
defparam \comb_32|PinTX~2 .lut_mask = 64'h02FE02FE00FE00FE;
defparam \comb_32|PinTX~2 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X53_Y23_N59
dffeas \comb_32|PinTX (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\comb_32|PinTX~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_32|PinTX~q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_32|PinTX .is_wysiwyg = "true";
defparam \comb_32|PinTX .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X5_Y23_N3
cyclonev_lcell_comb \~QUARTUS_CREATED_GND~I (
// Equation(s):

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\~QUARTUS_CREATED_GND~I_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_GND~I .extended_lut = "off";
defparam \~QUARTUS_CREATED_GND~I .lut_mask = 64'h0000000000000000;
defparam \~QUARTUS_CREATED_GND~I .shared_arith = "off";
// synopsys translate_on

endmodule
