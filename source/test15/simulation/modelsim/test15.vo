// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Standard Edition"

// DATE "09/04/2016 17:31:53"

// 
// Device: Altera EPM240F100C4 Package FBGA100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module test15 (
	clk,
	debug);
input 	clk;
output 	debug;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \counter[1]~11 ;
wire \counter[1]~11COUT1_16 ;
wire \counter[2]~7 ;
wire \counter[2]~7COUT1_17 ;
wire \counter[3]~1 ;
wire \counter[3]~1COUT1_18 ;
wire \counter[4]~13 ;
wire \counter[5]~3 ;
wire \counter[5]~3COUT1_19 ;
wire \always0~0_combout ;
wire \counter[6]~5 ;
wire \counter[6]~5COUT1_20 ;
wire \always0~1_combout ;
wire \always0~2_combout ;
wire \debug~reg0_regout ;
wire [7:0] counter;


// Location: PIN_E1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X5_Y2_N8
maxii_lcell \counter[0] (
// Equation(s):
// counter[0] = DFFEAS((((!counter[0]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(counter[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter[0] .lut_mask = "00ff";
defparam \counter[0] .operation_mode = "normal";
defparam \counter[0] .output_mode = "reg_only";
defparam \counter[0] .register_cascade_mode = "off";
defparam \counter[0] .sum_lutc_input = "datac";
defparam \counter[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N1
maxii_lcell \counter[1] (
// Equation(s):
// counter[1] = DFFEAS(counter[0] $ ((counter[1])), GLOBAL(\clk~combout ), VCC, , , , , , )
// \counter[1]~11  = CARRY((counter[0] & (counter[1])))
// \counter[1]~11COUT1_16  = CARRY((counter[0] & (counter[1])))

	.clk(\clk~combout ),
	.dataa(counter[0]),
	.datab(counter[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[1]),
	.cout(),
	.cout0(\counter[1]~11 ),
	.cout1(\counter[1]~11COUT1_16 ));
// synopsys translate_off
defparam \counter[1] .lut_mask = "6688";
defparam \counter[1] .operation_mode = "arithmetic";
defparam \counter[1] .output_mode = "reg_only";
defparam \counter[1] .register_cascade_mode = "off";
defparam \counter[1] .sum_lutc_input = "datac";
defparam \counter[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N2
maxii_lcell \counter[2] (
// Equation(s):
// counter[2] = DFFEAS((counter[2] $ ((\counter[1]~11 ))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \counter[2]~7  = CARRY(((!\counter[1]~11 ) # (!counter[2])))
// \counter[2]~7COUT1_17  = CARRY(((!\counter[1]~11COUT1_16 ) # (!counter[2])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\counter[1]~11 ),
	.cin1(\counter[1]~11COUT1_16 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[2]),
	.cout(),
	.cout0(\counter[2]~7 ),
	.cout1(\counter[2]~7COUT1_17 ));
// synopsys translate_off
defparam \counter[2] .cin0_used = "true";
defparam \counter[2] .cin1_used = "true";
defparam \counter[2] .lut_mask = "3c3f";
defparam \counter[2] .operation_mode = "arithmetic";
defparam \counter[2] .output_mode = "reg_only";
defparam \counter[2] .register_cascade_mode = "off";
defparam \counter[2] .sum_lutc_input = "cin";
defparam \counter[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N3
maxii_lcell \counter[3] (
// Equation(s):
// counter[3] = DFFEAS(counter[3] $ ((((!\counter[2]~7 )))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \counter[3]~1  = CARRY((counter[3] & ((!\counter[2]~7 ))))
// \counter[3]~1COUT1_18  = CARRY((counter[3] & ((!\counter[2]~7COUT1_17 ))))

	.clk(\clk~combout ),
	.dataa(counter[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\counter[2]~7 ),
	.cin1(\counter[2]~7COUT1_17 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[3]),
	.cout(),
	.cout0(\counter[3]~1 ),
	.cout1(\counter[3]~1COUT1_18 ));
// synopsys translate_off
defparam \counter[3] .cin0_used = "true";
defparam \counter[3] .cin1_used = "true";
defparam \counter[3] .lut_mask = "a50a";
defparam \counter[3] .operation_mode = "arithmetic";
defparam \counter[3] .output_mode = "reg_only";
defparam \counter[3] .register_cascade_mode = "off";
defparam \counter[3] .sum_lutc_input = "cin";
defparam \counter[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N4
maxii_lcell \counter[4] (
// Equation(s):
// counter[4] = DFFEAS(counter[4] $ ((((\counter[3]~1 )))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \counter[4]~13  = CARRY(((!\counter[3]~1COUT1_18 )) # (!counter[4]))

	.clk(\clk~combout ),
	.dataa(counter[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\counter[3]~1 ),
	.cin1(\counter[3]~1COUT1_18 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[4]),
	.cout(\counter[4]~13 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter[4] .cin0_used = "true";
defparam \counter[4] .cin1_used = "true";
defparam \counter[4] .lut_mask = "5a5f";
defparam \counter[4] .operation_mode = "arithmetic";
defparam \counter[4] .output_mode = "reg_only";
defparam \counter[4] .register_cascade_mode = "off";
defparam \counter[4] .sum_lutc_input = "cin";
defparam \counter[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N5
maxii_lcell \counter[5] (
// Equation(s):
// counter[5] = DFFEAS(counter[5] $ ((((!\counter[4]~13 )))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \counter[5]~3  = CARRY((counter[5] & ((!\counter[4]~13 ))))
// \counter[5]~3COUT1_19  = CARRY((counter[5] & ((!\counter[4]~13 ))))

	.clk(\clk~combout ),
	.dataa(counter[5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[4]~13 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[5]),
	.cout(),
	.cout0(\counter[5]~3 ),
	.cout1(\counter[5]~3COUT1_19 ));
// synopsys translate_off
defparam \counter[5] .cin_used = "true";
defparam \counter[5] .lut_mask = "a50a";
defparam \counter[5] .operation_mode = "arithmetic";
defparam \counter[5] .output_mode = "reg_only";
defparam \counter[5] .register_cascade_mode = "off";
defparam \counter[5] .sum_lutc_input = "cin";
defparam \counter[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N6
maxii_lcell \counter[6] (
// Equation(s):
// counter[6] = DFFEAS(counter[6] $ (((((!\counter[4]~13  & \counter[5]~3 ) # (\counter[4]~13  & \counter[5]~3COUT1_19 ))))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \counter[6]~5  = CARRY(((!\counter[5]~3 )) # (!counter[6]))
// \counter[6]~5COUT1_20  = CARRY(((!\counter[5]~3COUT1_19 )) # (!counter[6]))

	.clk(\clk~combout ),
	.dataa(counter[6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[4]~13 ),
	.cin0(\counter[5]~3 ),
	.cin1(\counter[5]~3COUT1_19 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[6]),
	.cout(),
	.cout0(\counter[6]~5 ),
	.cout1(\counter[6]~5COUT1_20 ));
// synopsys translate_off
defparam \counter[6] .cin0_used = "true";
defparam \counter[6] .cin1_used = "true";
defparam \counter[6] .cin_used = "true";
defparam \counter[6] .lut_mask = "5a5f";
defparam \counter[6] .operation_mode = "arithmetic";
defparam \counter[6] .output_mode = "reg_only";
defparam \counter[6] .register_cascade_mode = "off";
defparam \counter[6] .sum_lutc_input = "cin";
defparam \counter[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N9
maxii_lcell \always0~0 (
// Equation(s):
// \always0~0_combout  = (counter[5] & (((counter[6])))) # (!counter[5] & ((counter[0] & ((counter[6]))) # (!counter[0] & (counter[2]))))

	.clk(gnd),
	.dataa(counter[5]),
	.datab(counter[2]),
	.datac(counter[6]),
	.datad(counter[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always0~0 .lut_mask = "f0e4";
defparam \always0~0 .operation_mode = "normal";
defparam \always0~0 .output_mode = "comb_only";
defparam \always0~0 .register_cascade_mode = "off";
defparam \always0~0 .sum_lutc_input = "datac";
defparam \always0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N7
maxii_lcell \counter[7] (
// Equation(s):
// counter[7] = DFFEAS((counter[7] $ ((!(!\counter[4]~13  & \counter[6]~5 ) # (\counter[4]~13  & \counter[6]~5COUT1_20 )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[4]~13 ),
	.cin0(\counter[6]~5 ),
	.cin1(\counter[6]~5COUT1_20 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter[7] .cin0_used = "true";
defparam \counter[7] .cin1_used = "true";
defparam \counter[7] .cin_used = "true";
defparam \counter[7] .lut_mask = "c3c3";
defparam \counter[7] .operation_mode = "normal";
defparam \counter[7] .output_mode = "reg_only";
defparam \counter[7] .register_cascade_mode = "off";
defparam \counter[7] .sum_lutc_input = "cin";
defparam \counter[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N4
maxii_lcell \always0~1 (
// Equation(s):
// \always0~1_combout  = (counter[6]) # ((counter[1] & (!counter[4])) # (!counter[1] & ((counter[4]) # (counter[7]))))

	.clk(gnd),
	.dataa(counter[1]),
	.datab(counter[4]),
	.datac(counter[6]),
	.datad(counter[7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always0~1 .lut_mask = "f7f6";
defparam \always0~1 .operation_mode = "normal";
defparam \always0~1 .output_mode = "comb_only";
defparam \always0~1 .register_cascade_mode = "off";
defparam \always0~1 .sum_lutc_input = "datac";
defparam \always0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N9
maxii_lcell \always0~2 (
// Equation(s):
// \always0~2_combout  = (counter[1] & (counter[4] & (!counter[6] & !counter[7]))) # (!counter[1] & (!counter[4] & (counter[6] & counter[7])))

	.clk(gnd),
	.dataa(counter[1]),
	.datab(counter[4]),
	.datac(counter[6]),
	.datad(counter[7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always0~2 .lut_mask = "1008";
defparam \always0~2 .operation_mode = "normal";
defparam \always0~2 .output_mode = "comb_only";
defparam \always0~2 .register_cascade_mode = "off";
defparam \always0~2 .sum_lutc_input = "datac";
defparam \always0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N5
maxii_lcell \debug~reg0 (
// Equation(s):
// \debug~reg0_regout  = DFFEAS((counter[3] & (\always0~2_combout  & (\always0~0_combout  $ (\always0~1_combout )))) # (!counter[3] & (\always0~0_combout  & (!\always0~1_combout  & !\always0~2_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(counter[3]),
	.datab(\always0~0_combout ),
	.datac(\always0~1_combout ),
	.datad(\always0~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\debug~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debug~reg0 .lut_mask = "2804";
defparam \debug~reg0 .operation_mode = "normal";
defparam \debug~reg0 .output_mode = "reg_only";
defparam \debug~reg0 .register_cascade_mode = "off";
defparam \debug~reg0 .sum_lutc_input = "datac";
defparam \debug~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_K6,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \debug~I (
	.datain(\debug~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(debug));
// synopsys translate_off
defparam \debug~I .operation_mode = "output";
// synopsys translate_on

endmodule
